{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "matched-rhythm",
   "metadata": {},
   "outputs": [],
   "source": [
    "import geopandas as gpd\n",
    "import numpy as np\n",
    "import matplotlib as mpl\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import seaborn as sns \n",
    "from sklearn.linear_model import LogisticRegression\n",
    "import statsmodels.api as sm\n",
    "import statsmodels.formula.api as smf\n",
    "from sklearn.model_selection import train_test_split\n",
    "from statsmodels.stats.outliers_influence import variance_inflation_factor\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.preprocessing import RobustScaler\n",
    "from sklearn.preprocessing import MaxAbsScaler,RobustScaler\n",
    "from scipy import stats\n",
    "from sklearn.datasets import load_iris\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.preprocessing import MinMaxScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "spiritual-enough",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1 = pd.read_csv(\"17.용인시_소상공인_매출정보.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "cross-vienna",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gid</th>\n",
       "      <th>ws_cnt</th>\n",
       "      <th>found_age_1</th>\n",
       "      <th>found_age_2</th>\n",
       "      <th>found_age_3</th>\n",
       "      <th>found_age_4</th>\n",
       "      <th>found_age_5</th>\n",
       "      <th>found_age_6</th>\n",
       "      <th>runout_cnt</th>\n",
       "      <th>smbiz_yn_cnt</th>\n",
       "      <th>...</th>\n",
       "      <th>indcd_l_yn</th>\n",
       "      <th>indcd_m_yn</th>\n",
       "      <th>indcd_n_yn</th>\n",
       "      <th>indcd_o_yn</th>\n",
       "      <th>indcd_p_yn</th>\n",
       "      <th>indcd_q_yn</th>\n",
       "      <th>indcd_r_yn</th>\n",
       "      <th>indcd_s_yn</th>\n",
       "      <th>indcd_t_yn</th>\n",
       "      <th>indcd_u_yn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>다바67bb99aa</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>다바68aa99ba</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>다바68aa99bb</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>다바68ab99ba</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>다바68ba99ab</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2252</th>\n",
       "      <td>다사92ab02bb</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2253</th>\n",
       "      <td>다사92ab03aa</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2254</th>\n",
       "      <td>다사92ab04ab</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2255</th>\n",
       "      <td>다사92ab05ab</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2256</th>\n",
       "      <td>다사92ba02bb</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2257 rows × 66 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             gid  ws_cnt  found_age_1  found_age_2  found_age_3  found_age_4  \\\n",
       "0     다바67bb99aa       1            0            0            0            0   \n",
       "1     다바68aa99ba       1            0            0            0            1   \n",
       "2     다바68aa99bb       5            0            1            0            0   \n",
       "3     다바68ab99ba       3            0            0            1            0   \n",
       "4     다바68ba99ab      16            0            1            2            3   \n",
       "...          ...     ...          ...          ...          ...          ...   \n",
       "2252  다사92ab02bb       1            0            0            0            1   \n",
       "2253  다사92ab03aa       2            0            0            0            0   \n",
       "2254  다사92ab04ab       1            0            0            0            0   \n",
       "2255  다사92ab05ab       2            0            1            0            0   \n",
       "2256  다사92ba02bb       3            0            0            0            0   \n",
       "\n",
       "      found_age_5  found_age_6  runout_cnt  smbiz_yn_cnt  ...  indcd_l_yn  \\\n",
       "0               0            1           0             1  ...         0.0   \n",
       "1               0            0           0             0  ...         0.0   \n",
       "2               0            4           0             3  ...         0.0   \n",
       "3               2            0           0             3  ...         0.0   \n",
       "4               2            8           0            13  ...         0.0   \n",
       "...           ...          ...         ...           ...  ...         ...   \n",
       "2252            0            0           0             1  ...         0.0   \n",
       "2253            1            1           0             2  ...         0.0   \n",
       "2254            0            1           0             0  ...         0.0   \n",
       "2255            0            1           0             1  ...         0.0   \n",
       "2256            1            1           1             0  ...         0.0   \n",
       "\n",
       "      indcd_m_yn  indcd_n_yn  indcd_o_yn  indcd_p_yn  indcd_q_yn  indcd_r_yn  \\\n",
       "0            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "1            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "2            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "3            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "4            0.0         0.0         0.0         0.0         0.0         1.0   \n",
       "...          ...         ...         ...         ...         ...         ...   \n",
       "2252         0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "2253         0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "2254         0.0         0.0         0.0         0.0         1.0         0.0   \n",
       "2255         0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "2256         0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "\n",
       "      indcd_s_yn  indcd_t_yn  indcd_u_yn  \n",
       "0            0.0         0.0         0.0  \n",
       "1            0.0         0.0         0.0  \n",
       "2            0.0         0.0         0.0  \n",
       "3            0.0         0.0         0.0  \n",
       "4            1.0         0.0         0.0  \n",
       "...          ...         ...         ...  \n",
       "2252         0.0         0.0         0.0  \n",
       "2253         0.0         0.0         0.0  \n",
       "2254         0.0         0.0         0.0  \n",
       "2255         0.0         0.0         0.0  \n",
       "2256         0.0         0.0         0.0  \n",
       "\n",
       "[2257 rows x 66 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1[[\"indcd_a_yn\",\"indcd_b_yn\",\"indcd_c_yn\",\"indcd_d_yn\",\"indcd_e_yn\",\"indcd_f_yn\",\"indcd_g_yn\",\"indcd_h_yn\",\"indcd_i_yn\",\"indcd_j_yn\",\"indcd_k_yn\",\"indcd_l_yn\",\"indcd_m_yn\",\"indcd_n_yn\",\"indcd_o_yn\",\"indcd_p_yn\",\"indcd_q_yn\",\"indcd_r_yn\",\"indcd_s_yn\",\"indcd_t_yn\",\"indcd_u_yn\"]] = df1[[\"indcd_a_yn\",\"indcd_b_yn\",\"indcd_c_yn\",\"indcd_d_yn\",\"indcd_e_yn\",\"indcd_f_yn\",\"indcd_g_yn\",\"indcd_h_yn\",\"indcd_i_yn\",\"indcd_j_yn\",\"indcd_k_yn\",\"indcd_l_yn\",\"indcd_m_yn\",\"indcd_n_yn\",\"indcd_o_yn\",\"indcd_p_yn\",\"indcd_q_yn\",\"indcd_r_yn\",\"indcd_s_yn\",\"indcd_t_yn\",\"indcd_u_yn\"]].replace('Y', 1)\n",
    "df1[[\"indcd_a_yn\",\"indcd_b_yn\",\"indcd_c_yn\",\"indcd_d_yn\",\"indcd_e_yn\",\"indcd_f_yn\",\"indcd_g_yn\",\"indcd_h_yn\",\"indcd_i_yn\",\"indcd_j_yn\",\"indcd_k_yn\",\"indcd_l_yn\",\"indcd_m_yn\",\"indcd_n_yn\",\"indcd_o_yn\",\"indcd_p_yn\",\"indcd_q_yn\",\"indcd_r_yn\",\"indcd_s_yn\",\"indcd_t_yn\",\"indcd_u_yn\"]] = df1[[\"indcd_a_yn\",\"indcd_b_yn\",\"indcd_c_yn\",\"indcd_d_yn\",\"indcd_e_yn\",\"indcd_f_yn\",\"indcd_g_yn\",\"indcd_h_yn\",\"indcd_i_yn\",\"indcd_j_yn\",\"indcd_k_yn\",\"indcd_l_yn\",\"indcd_m_yn\",\"indcd_n_yn\",\"indcd_o_yn\",\"indcd_p_yn\",\"indcd_q_yn\",\"indcd_r_yn\",\"indcd_s_yn\",\"indcd_t_yn\",\"indcd_u_yn\"]].replace(np.nan, 0)\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "certified-village",
   "metadata": {},
   "outputs": [],
   "source": [
    "#분석에 사용되지 않는 gid정보는 삭제합니다.\n",
    "df1_ = df1.dropna().drop(['gid'], axis=1, inplace=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "taken-starter",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ws_cnt</th>\n",
       "      <th>found_age_1</th>\n",
       "      <th>found_age_2</th>\n",
       "      <th>found_age_3</th>\n",
       "      <th>found_age_4</th>\n",
       "      <th>found_age_5</th>\n",
       "      <th>found_age_6</th>\n",
       "      <th>runout_cnt</th>\n",
       "      <th>smbiz_yn_cnt</th>\n",
       "      <th>rpr_per_gender_m</th>\n",
       "      <th>...</th>\n",
       "      <th>indcd_l_yn</th>\n",
       "      <th>indcd_m_yn</th>\n",
       "      <th>indcd_n_yn</th>\n",
       "      <th>indcd_o_yn</th>\n",
       "      <th>indcd_p_yn</th>\n",
       "      <th>indcd_q_yn</th>\n",
       "      <th>indcd_r_yn</th>\n",
       "      <th>indcd_s_yn</th>\n",
       "      <th>indcd_t_yn</th>\n",
       "      <th>indcd_u_yn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>13</td>\n",
       "      <td>8</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2252</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2253</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2254</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2255</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2256</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2257 rows × 65 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      ws_cnt  found_age_1  found_age_2  found_age_3  found_age_4  found_age_5  \\\n",
       "0          1            0            0            0            0            0   \n",
       "1          1            0            0            0            1            0   \n",
       "2          5            0            1            0            0            0   \n",
       "3          3            0            0            1            0            2   \n",
       "4         16            0            1            2            3            2   \n",
       "...      ...          ...          ...          ...          ...          ...   \n",
       "2252       1            0            0            0            1            0   \n",
       "2253       2            0            0            0            0            1   \n",
       "2254       1            0            0            0            0            0   \n",
       "2255       2            0            1            0            0            0   \n",
       "2256       3            0            0            0            0            1   \n",
       "\n",
       "      found_age_6  runout_cnt  smbiz_yn_cnt  rpr_per_gender_m  ...  \\\n",
       "0               1           0             1                 1  ...   \n",
       "1               0           0             0                 1  ...   \n",
       "2               4           0             3                 4  ...   \n",
       "3               0           0             3                 0  ...   \n",
       "4               8           0            13                 8  ...   \n",
       "...           ...         ...           ...               ...  ...   \n",
       "2252            0           0             1                 0  ...   \n",
       "2253            1           0             2                 2  ...   \n",
       "2254            1           0             0                 1  ...   \n",
       "2255            1           0             1                 2  ...   \n",
       "2256            1           1             0                 1  ...   \n",
       "\n",
       "      indcd_l_yn  indcd_m_yn  indcd_n_yn  indcd_o_yn  indcd_p_yn  indcd_q_yn  \\\n",
       "0            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "1            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "2            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "3            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "4            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "...          ...         ...         ...         ...         ...         ...   \n",
       "2252         0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "2253         0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "2254         0.0         0.0         0.0         0.0         0.0         1.0   \n",
       "2255         0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "2256         0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "\n",
       "      indcd_r_yn  indcd_s_yn  indcd_t_yn  indcd_u_yn  \n",
       "0            0.0         0.0         0.0         0.0  \n",
       "1            0.0         0.0         0.0         0.0  \n",
       "2            0.0         0.0         0.0         0.0  \n",
       "3            0.0         0.0         0.0         0.0  \n",
       "4            1.0         1.0         0.0         0.0  \n",
       "...          ...         ...         ...         ...  \n",
       "2252         0.0         0.0         0.0         0.0  \n",
       "2253         0.0         0.0         0.0         0.0  \n",
       "2254         0.0         0.0         0.0         0.0  \n",
       "2255         0.0         0.0         0.0         0.0  \n",
       "2256         0.0         0.0         0.0         0.0  \n",
       "\n",
       "[2257 rows x 65 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "narrow-booth",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.kdeplot(df1_['found_age_6'])\n",
    "plt.title(\"Distribution of shops existing longer than 6 years\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "interstate-central",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 종속변수를 로그로 변환하였을 때 정규분포와 비슷한 형태로 변환되었으므로 \n",
    "\n",
    "#data['new_variable'] = np.log10(data['runout_cnt'])\n",
    "#data\n",
    "#data = df1_.apply(lambda x: np.log(x+1)) \n",
    "sns.kdeplot(np.log1p(df1_['found_age_6']))\n",
    "plt.title(\"Distribution of shops exisiting longer than 6 years\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "compact-nicholas",
   "metadata": {},
   "outputs": [],
   "source": [
    "#스케일링 함수 정의\n",
    "scaler = MinMaxScaler()\n",
    "#확진자 수 로그 변환\n",
    "df1_['found_age_6'] = np.log1p(df1_['found_age_6'])\n",
    "\n",
    "#data = data.drop(['city'],axis=1)\n",
    "df1_[df1_.columns.values[:]] = scaler.fit_transform(df1_[df1_.columns.values[:]])\n",
    "#plt.figure(figsize=(8,8))\n",
    "#sns.heatmap(data = data.corr(), annot=True, \n",
    "#fmt = '.2f', linewidths=.5, cmap=sns.diverging_palette(220,20,as_cmap=True))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "driving-sherman",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1_data = df1_[df1_.columns.values[:]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "starting-record",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ws_cnt</th>\n",
       "      <th>found_age_1</th>\n",
       "      <th>found_age_2</th>\n",
       "      <th>found_age_3</th>\n",
       "      <th>found_age_4</th>\n",
       "      <th>found_age_5</th>\n",
       "      <th>found_age_6</th>\n",
       "      <th>runout_cnt</th>\n",
       "      <th>smbiz_yn_cnt</th>\n",
       "      <th>rpr_per_gender_m</th>\n",
       "      <th>...</th>\n",
       "      <th>indcd_l_yn</th>\n",
       "      <th>indcd_m_yn</th>\n",
       "      <th>indcd_n_yn</th>\n",
       "      <th>indcd_o_yn</th>\n",
       "      <th>indcd_p_yn</th>\n",
       "      <th>indcd_q_yn</th>\n",
       "      <th>indcd_r_yn</th>\n",
       "      <th>indcd_s_yn</th>\n",
       "      <th>indcd_t_yn</th>\n",
       "      <th>indcd_u_yn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.131452</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004566</td>\n",
       "      <td>0.005952</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.030303</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.005952</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.012346</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.021277</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.305222</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.013699</td>\n",
       "      <td>0.023810</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.006173</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.016129</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.064516</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.013699</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.046296</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.021277</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.090909</td>\n",
       "      <td>0.064516</td>\n",
       "      <td>0.416693</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.059361</td>\n",
       "      <td>0.047619</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2252</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.030303</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004566</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2253</th>\n",
       "      <td>0.003086</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.131452</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.009132</td>\n",
       "      <td>0.011905</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2254</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.131452</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.005952</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2255</th>\n",
       "      <td>0.003086</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.021277</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.131452</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004566</td>\n",
       "      <td>0.011905</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2256</th>\n",
       "      <td>0.006173</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.131452</td>\n",
       "      <td>0.058824</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.005952</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2257 rows × 65 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        ws_cnt  found_age_1  found_age_2  found_age_3  found_age_4  \\\n",
       "0     0.000000          0.0     0.000000     0.000000     0.000000   \n",
       "1     0.000000          0.0     0.000000     0.000000     0.030303   \n",
       "2     0.012346          0.0     0.021277     0.000000     0.000000   \n",
       "3     0.006173          0.0     0.000000     0.016129     0.000000   \n",
       "4     0.046296          0.0     0.021277     0.032258     0.090909   \n",
       "...        ...          ...          ...          ...          ...   \n",
       "2252  0.000000          0.0     0.000000     0.000000     0.030303   \n",
       "2253  0.003086          0.0     0.000000     0.000000     0.000000   \n",
       "2254  0.000000          0.0     0.000000     0.000000     0.000000   \n",
       "2255  0.003086          0.0     0.021277     0.000000     0.000000   \n",
       "2256  0.006173          0.0     0.000000     0.000000     0.000000   \n",
       "\n",
       "      found_age_5  found_age_6  runout_cnt  smbiz_yn_cnt  rpr_per_gender_m  \\\n",
       "0        0.000000     0.131452    0.000000      0.004566          0.005952   \n",
       "1        0.000000     0.000000    0.000000      0.000000          0.005952   \n",
       "2        0.000000     0.305222    0.000000      0.013699          0.023810   \n",
       "3        0.064516     0.000000    0.000000      0.013699          0.000000   \n",
       "4        0.064516     0.416693    0.000000      0.059361          0.047619   \n",
       "...           ...          ...         ...           ...               ...   \n",
       "2252     0.000000     0.000000    0.000000      0.004566          0.000000   \n",
       "2253     0.032258     0.131452    0.000000      0.009132          0.011905   \n",
       "2254     0.000000     0.131452    0.000000      0.000000          0.005952   \n",
       "2255     0.000000     0.131452    0.000000      0.004566          0.011905   \n",
       "2256     0.032258     0.131452    0.058824      0.000000          0.005952   \n",
       "\n",
       "      ...  indcd_l_yn  indcd_m_yn  indcd_n_yn  indcd_o_yn  indcd_p_yn  \\\n",
       "0     ...         0.0         0.0         0.0         0.0         0.0   \n",
       "1     ...         0.0         0.0         0.0         0.0         0.0   \n",
       "2     ...         0.0         0.0         0.0         0.0         0.0   \n",
       "3     ...         0.0         0.0         0.0         0.0         0.0   \n",
       "4     ...         0.0         0.0         0.0         0.0         0.0   \n",
       "...   ...         ...         ...         ...         ...         ...   \n",
       "2252  ...         0.0         0.0         0.0         0.0         0.0   \n",
       "2253  ...         0.0         0.0         0.0         0.0         0.0   \n",
       "2254  ...         0.0         0.0         0.0         0.0         0.0   \n",
       "2255  ...         0.0         0.0         0.0         0.0         0.0   \n",
       "2256  ...         0.0         0.0         0.0         0.0         0.0   \n",
       "\n",
       "      indcd_q_yn  indcd_r_yn  indcd_s_yn  indcd_t_yn  indcd_u_yn  \n",
       "0            0.0         0.0         0.0         0.0         0.0  \n",
       "1            0.0         0.0         0.0         0.0         0.0  \n",
       "2            0.0         0.0         0.0         0.0         0.0  \n",
       "3            0.0         0.0         0.0         0.0         0.0  \n",
       "4            0.0         1.0         1.0         0.0         0.0  \n",
       "...          ...         ...         ...         ...         ...  \n",
       "2252         0.0         0.0         0.0         0.0         0.0  \n",
       "2253         0.0         0.0         0.0         0.0         0.0  \n",
       "2254         1.0         0.0         0.0         0.0         0.0  \n",
       "2255         0.0         0.0         0.0         0.0         0.0  \n",
       "2256         0.0         0.0         0.0         0.0         0.0  \n",
       "\n",
       "[2257 rows x 65 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "christian-distance",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>const</th>\n",
       "      <th>ws_cnt</th>\n",
       "      <th>found_age_1</th>\n",
       "      <th>found_age_2</th>\n",
       "      <th>found_age_3</th>\n",
       "      <th>found_age_4</th>\n",
       "      <th>found_age_5</th>\n",
       "      <th>found_age_6</th>\n",
       "      <th>runout_cnt</th>\n",
       "      <th>smbiz_yn_cnt</th>\n",
       "      <th>...</th>\n",
       "      <th>indcd_l_yn</th>\n",
       "      <th>indcd_m_yn</th>\n",
       "      <th>indcd_n_yn</th>\n",
       "      <th>indcd_o_yn</th>\n",
       "      <th>indcd_p_yn</th>\n",
       "      <th>indcd_q_yn</th>\n",
       "      <th>indcd_r_yn</th>\n",
       "      <th>indcd_s_yn</th>\n",
       "      <th>indcd_t_yn</th>\n",
       "      <th>indcd_u_yn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.131452</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004566</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.030303</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.012346</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.021277</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.305222</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.013699</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.006173</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.016129</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.064516</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.013699</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.046296</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.021277</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.090909</td>\n",
       "      <td>0.064516</td>\n",
       "      <td>0.416693</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.059361</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2252</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.030303</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004566</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2253</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.003086</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.131452</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.009132</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2254</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.131452</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2255</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.003086</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.021277</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.131452</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004566</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2256</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.006173</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.032258</td>\n",
       "      <td>0.131452</td>\n",
       "      <td>0.058824</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2257 rows × 66 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      const    ws_cnt  found_age_1  found_age_2  found_age_3  found_age_4  \\\n",
       "0       1.0  0.000000          0.0     0.000000     0.000000     0.000000   \n",
       "1       1.0  0.000000          0.0     0.000000     0.000000     0.030303   \n",
       "2       1.0  0.012346          0.0     0.021277     0.000000     0.000000   \n",
       "3       1.0  0.006173          0.0     0.000000     0.016129     0.000000   \n",
       "4       1.0  0.046296          0.0     0.021277     0.032258     0.090909   \n",
       "...     ...       ...          ...          ...          ...          ...   \n",
       "2252    1.0  0.000000          0.0     0.000000     0.000000     0.030303   \n",
       "2253    1.0  0.003086          0.0     0.000000     0.000000     0.000000   \n",
       "2254    1.0  0.000000          0.0     0.000000     0.000000     0.000000   \n",
       "2255    1.0  0.003086          0.0     0.021277     0.000000     0.000000   \n",
       "2256    1.0  0.006173          0.0     0.000000     0.000000     0.000000   \n",
       "\n",
       "      found_age_5  found_age_6  runout_cnt  smbiz_yn_cnt  ...  indcd_l_yn  \\\n",
       "0        0.000000     0.131452    0.000000      0.004566  ...         0.0   \n",
       "1        0.000000     0.000000    0.000000      0.000000  ...         0.0   \n",
       "2        0.000000     0.305222    0.000000      0.013699  ...         0.0   \n",
       "3        0.064516     0.000000    0.000000      0.013699  ...         0.0   \n",
       "4        0.064516     0.416693    0.000000      0.059361  ...         0.0   \n",
       "...           ...          ...         ...           ...  ...         ...   \n",
       "2252     0.000000     0.000000    0.000000      0.004566  ...         0.0   \n",
       "2253     0.032258     0.131452    0.000000      0.009132  ...         0.0   \n",
       "2254     0.000000     0.131452    0.000000      0.000000  ...         0.0   \n",
       "2255     0.000000     0.131452    0.000000      0.004566  ...         0.0   \n",
       "2256     0.032258     0.131452    0.058824      0.000000  ...         0.0   \n",
       "\n",
       "      indcd_m_yn  indcd_n_yn  indcd_o_yn  indcd_p_yn  indcd_q_yn  indcd_r_yn  \\\n",
       "0            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "1            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "2            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "3            0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "4            0.0         0.0         0.0         0.0         0.0         1.0   \n",
       "...          ...         ...         ...         ...         ...         ...   \n",
       "2252         0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "2253         0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "2254         0.0         0.0         0.0         0.0         1.0         0.0   \n",
       "2255         0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "2256         0.0         0.0         0.0         0.0         0.0         0.0   \n",
       "\n",
       "      indcd_s_yn  indcd_t_yn  indcd_u_yn  \n",
       "0            0.0         0.0         0.0  \n",
       "1            0.0         0.0         0.0  \n",
       "2            0.0         0.0         0.0  \n",
       "3            0.0         0.0         0.0  \n",
       "4            1.0         0.0         0.0  \n",
       "...          ...         ...         ...  \n",
       "2252         0.0         0.0         0.0  \n",
       "2253         0.0         0.0         0.0  \n",
       "2254         0.0         0.0         0.0  \n",
       "2255         0.0         0.0         0.0  \n",
       "2256         0.0         0.0         0.0  \n",
       "\n",
       "[2257 rows x 66 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1_data = sm.add_constant(df1_data, has_constant='add')\n",
    "df1_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "fleet-awareness",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1579, 65) (678, 65) (1579,) (678,)\n"
     ]
    }
   ],
   "source": [
    "feature_columns = list(df1_data.columns.difference(['found_age_6']))\n",
    "X = df1_data[feature_columns]\n",
    "y = df1_data.found_age_6\n",
    "train_x, test_x, train_y, test_y = train_test_split(X, y, train_size = 0.7, test_size = 0.3)\n",
    "\n",
    "print(train_x.shape, test_x.shape, train_y.shape, test_y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "attached-detection",
   "metadata": {},
   "outputs": [],
   "source": [
    "full_model = sm.OLS(train_y, train_x)\n",
    "fitted_full_model = full_model.fit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "massive-classroom",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>found_age_6</td>   <th>  R-squared:         </th> <td>   0.847</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.842</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   148.0</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 26 Jan 2021</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>16:27:58</td>     <th>  Log-Likelihood:    </th> <td>  1881.4</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  1579</td>      <th>  AIC:               </th> <td>  -3647.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  1521</td>      <th>  BIC:               </th> <td>  -3336.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>    57</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "             <td></td>               <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>age10_ratio</th>            <td>   -0.0377</td> <td>    0.039</td> <td>   -0.973</td> <td> 0.331</td> <td>   -0.114</td> <td>    0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>age20_ratio</th>            <td>   -0.0408</td> <td>    0.022</td> <td>   -1.819</td> <td> 0.069</td> <td>   -0.085</td> <td>    0.003</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>age30_ratio</th>            <td>   -0.0298</td> <td>    0.015</td> <td>   -2.022</td> <td> 0.043</td> <td>   -0.059</td> <td>   -0.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>age40_ratio</th>            <td>   -0.0335</td> <td>    0.014</td> <td>   -2.474</td> <td> 0.013</td> <td>   -0.060</td> <td>   -0.007</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>age50_ratio</th>            <td>   -0.0038</td> <td>    0.015</td> <td>   -0.251</td> <td> 0.802</td> <td>   -0.033</td> <td>    0.026</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>age60_ratio</th>            <td>   -0.0374</td> <td>    0.023</td> <td>   -1.629</td> <td> 0.103</td> <td>   -0.082</td> <td>    0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>age70_ratio</th>            <td>    0.0348</td> <td>    0.039</td> <td>    0.896</td> <td> 0.370</td> <td>   -0.041</td> <td>    0.111</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>                  <td>    0.0371</td> <td>    0.009</td> <td>    4.056</td> <td> 0.000</td> <td>    0.019</td> <td>    0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>found_age_1</th>            <td>   -0.2369</td> <td>    0.049</td> <td>   -4.863</td> <td> 0.000</td> <td>   -0.332</td> <td>   -0.141</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>found_age_2</th>            <td>   -0.8163</td> <td>    0.075</td> <td>  -10.865</td> <td> 0.000</td> <td>   -0.964</td> <td>   -0.669</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>found_age_3</th>            <td>   -0.8607</td> <td>    0.092</td> <td>   -9.397</td> <td> 0.000</td> <td>   -1.040</td> <td>   -0.681</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>found_age_4</th>            <td>   -0.5980</td> <td>    0.063</td> <td>   -9.435</td> <td> 0.000</td> <td>   -0.722</td> <td>   -0.474</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>found_age_5</th>            <td>   -0.6009</td> <td>    0.068</td> <td>   -8.785</td> <td> 0.000</td> <td>   -0.735</td> <td>   -0.467</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_a_yn</th>             <td>    0.0536</td> <td>    0.023</td> <td>    2.331</td> <td> 0.020</td> <td>    0.008</td> <td>    0.099</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_b_yn</th>             <td>-3.854e-15</td> <td> 2.78e-15</td> <td>   -1.388</td> <td> 0.165</td> <td> -9.3e-15</td> <td> 1.59e-15</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_c_yn</th>             <td>    0.0576</td> <td>    0.005</td> <td>   11.226</td> <td> 0.000</td> <td>    0.048</td> <td>    0.068</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_d_yn</th>             <td>    0.0991</td> <td>    0.075</td> <td>    1.317</td> <td> 0.188</td> <td>   -0.048</td> <td>    0.247</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_e_yn</th>             <td> 3.774e-15</td> <td> 2.13e-15</td> <td>    1.770</td> <td> 0.077</td> <td>-4.09e-16</td> <td> 7.96e-15</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_f_yn</th>             <td>    0.0243</td> <td>    0.011</td> <td>    2.141</td> <td> 0.032</td> <td>    0.002</td> <td>    0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_g_yn</th>             <td>    0.0794</td> <td>    0.004</td> <td>   18.185</td> <td> 0.000</td> <td>    0.071</td> <td>    0.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_h_yn</th>             <td>    0.0492</td> <td>    0.009</td> <td>    5.460</td> <td> 0.000</td> <td>    0.032</td> <td>    0.067</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_i_yn</th>             <td>    0.0634</td> <td>    0.004</td> <td>   15.029</td> <td> 0.000</td> <td>    0.055</td> <td>    0.072</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_j_yn</th>             <td>    0.0079</td> <td>    0.011</td> <td>    0.700</td> <td> 0.484</td> <td>   -0.014</td> <td>    0.030</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_k_yn</th>             <td>    0.0596</td> <td>    0.035</td> <td>    1.713</td> <td> 0.087</td> <td>   -0.009</td> <td>    0.128</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_l_yn</th>             <td>    0.0233</td> <td>    0.014</td> <td>    1.642</td> <td> 0.101</td> <td>   -0.005</td> <td>    0.051</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_m_yn</th>             <td>    0.0329</td> <td>    0.008</td> <td>    4.202</td> <td> 0.000</td> <td>    0.018</td> <td>    0.048</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_n_yn</th>             <td>    0.0176</td> <td>    0.007</td> <td>    2.517</td> <td> 0.012</td> <td>    0.004</td> <td>    0.031</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_o_yn</th>             <td> 7.001e-17</td> <td> 4.12e-16</td> <td>    0.170</td> <td> 0.865</td> <td>-7.39e-16</td> <td> 8.79e-16</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_p_yn</th>             <td>    0.0470</td> <td>    0.006</td> <td>    7.877</td> <td> 0.000</td> <td>    0.035</td> <td>    0.059</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_q_yn</th>             <td>    0.0521</td> <td>    0.007</td> <td>    7.059</td> <td> 0.000</td> <td>    0.038</td> <td>    0.067</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_r_yn</th>             <td>    0.0518</td> <td>    0.006</td> <td>    8.183</td> <td> 0.000</td> <td>    0.039</td> <td>    0.064</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_s_yn</th>             <td>    0.0791</td> <td>    0.005</td> <td>   16.755</td> <td> 0.000</td> <td>    0.070</td> <td>    0.088</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_t_yn</th>             <td>    0.0443</td> <td>    0.080</td> <td>    0.556</td> <td> 0.578</td> <td>   -0.112</td> <td>    0.201</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_u_yn</th>             <td>  -2.5e-15</td> <td> 1.02e-15</td> <td>   -2.454</td> <td> 0.014</td> <td> -4.5e-15</td> <td>-5.02e-16</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>rpr_per_age_bin_10</th>     <td>   -0.0717</td> <td>    0.029</td> <td>   -2.447</td> <td> 0.015</td> <td>   -0.129</td> <td>   -0.014</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>rpr_per_age_bin_20</th>     <td>    0.0749</td> <td>    0.056</td> <td>    1.348</td> <td> 0.178</td> <td>   -0.034</td> <td>    0.184</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>rpr_per_age_bin_30to50</th> <td>    0.9720</td> <td>    0.122</td> <td>    7.946</td> <td> 0.000</td> <td>    0.732</td> <td>    1.212</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>rpr_per_age_bin_50over</th> <td>   -0.0859</td> <td>    0.090</td> <td>   -0.958</td> <td> 0.338</td> <td>   -0.262</td> <td>    0.090</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>rpr_per_gender_f</th>       <td>    0.5010</td> <td>    0.147</td> <td>    3.408</td> <td> 0.001</td> <td>    0.213</td> <td>    0.789</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>rpr_per_gender_m</th>       <td>    1.0387</td> <td>    0.121</td> <td>    8.580</td> <td> 0.000</td> <td>    0.801</td> <td>    1.276</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>runout_cnt</th>             <td>   -0.1477</td> <td>    0.056</td> <td>   -2.660</td> <td> 0.008</td> <td>   -0.257</td> <td>   -0.039</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_201703</th>   <td>   -0.8825</td> <td>    0.596</td> <td>   -1.480</td> <td> 0.139</td> <td>   -2.052</td> <td>    0.287</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_201706</th>   <td>    1.1936</td> <td>    0.669</td> <td>    1.783</td> <td> 0.075</td> <td>   -0.119</td> <td>    2.506</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_201709</th>   <td>    0.9649</td> <td>    0.738</td> <td>    1.308</td> <td> 0.191</td> <td>   -0.483</td> <td>    2.412</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_201712</th>   <td>   -1.6914</td> <td>    0.848</td> <td>   -1.996</td> <td> 0.046</td> <td>   -3.354</td> <td>   -0.029</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_201803</th>   <td>   -0.8397</td> <td>    0.997</td> <td>   -0.843</td> <td> 0.400</td> <td>   -2.794</td> <td>    1.115</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_201806</th>   <td>   -0.2613</td> <td>    0.739</td> <td>   -0.353</td> <td> 0.724</td> <td>   -1.712</td> <td>    1.189</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_201809</th>   <td>   -0.0270</td> <td>    0.685</td> <td>   -0.039</td> <td> 0.969</td> <td>   -1.370</td> <td>    1.316</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_201812</th>   <td>    3.6076</td> <td>    0.741</td> <td>    4.868</td> <td> 0.000</td> <td>    2.154</td> <td>    5.061</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_201903</th>   <td>   -2.6374</td> <td>    0.705</td> <td>   -3.743</td> <td> 0.000</td> <td>   -4.019</td> <td>   -1.255</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_201906</th>   <td>    1.0265</td> <td>    0.824</td> <td>    1.246</td> <td> 0.213</td> <td>   -0.590</td> <td>    2.643</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_201909</th>   <td>   -0.1669</td> <td>    0.787</td> <td>   -0.212</td> <td> 0.832</td> <td>   -1.710</td> <td>    1.376</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_201912</th>   <td>   -0.8312</td> <td>    0.770</td> <td>   -1.080</td> <td> 0.280</td> <td>   -2.341</td> <td>    0.679</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_202003</th>   <td>    0.2728</td> <td>    0.582</td> <td>    0.469</td> <td> 0.639</td> <td>   -0.869</td> <td>    1.415</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_202006</th>   <td>    0.3572</td> <td>    0.656</td> <td>    0.544</td> <td> 0.586</td> <td>   -0.930</td> <td>    1.645</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sales_est_amt_202009</th>   <td>   -0.5143</td> <td>    0.563</td> <td>   -0.913</td> <td> 0.361</td> <td>   -1.619</td> <td>    0.591</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>smbiz_yn_cnt</th>           <td>   -0.2093</td> <td>    0.282</td> <td>   -0.743</td> <td> 0.457</td> <td>   -0.761</td> <td>    0.343</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sme_loan_cnt</th>           <td>    0.1157</td> <td>    0.048</td> <td>    2.435</td> <td> 0.015</td> <td>    0.023</td> <td>    0.209</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sme_loan_y_1</th>           <td>    0.1621</td> <td>    0.043</td> <td>    3.800</td> <td> 0.000</td> <td>    0.078</td> <td>    0.246</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sme_loan_y_2</th>           <td>    0.1106</td> <td>    0.042</td> <td>    2.645</td> <td> 0.008</td> <td>    0.029</td> <td>    0.193</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sme_loan_y_3</th>           <td>    0.0316</td> <td>    0.060</td> <td>    0.527</td> <td> 0.598</td> <td>   -0.086</td> <td>    0.149</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sme_loan_y_4</th>           <td>    0.1318</td> <td>    0.083</td> <td>    1.585</td> <td> 0.113</td> <td>   -0.031</td> <td>    0.295</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sme_loan_y_5</th>           <td>    0.0946</td> <td>    0.085</td> <td>    1.113</td> <td> 0.266</td> <td>   -0.072</td> <td>    0.261</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sme_loan_y_6</th>           <td>    0.0775</td> <td>    0.109</td> <td>    0.714</td> <td> 0.475</td> <td>   -0.135</td> <td>    0.290</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ws_cnt</th>                 <td>    0.8152</td> <td>    0.104</td> <td>    7.818</td> <td> 0.000</td> <td>    0.611</td> <td>    1.020</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>22.530</td> <th>  Durbin-Watson:     </th> <td>   1.950</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td>  23.413</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.273</td> <th>  Prob(JB):          </th> <td>8.24e-06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 3.240</td> <th>  Cond. No.          </th> <td>1.05e+16</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is 3.62e-29. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:            found_age_6   R-squared:                       0.847\n",
       "Model:                            OLS   Adj. R-squared:                  0.842\n",
       "Method:                 Least Squares   F-statistic:                     148.0\n",
       "Date:                Tue, 26 Jan 2021   Prob (F-statistic):               0.00\n",
       "Time:                        16:27:58   Log-Likelihood:                 1881.4\n",
       "No. Observations:                1579   AIC:                            -3647.\n",
       "Df Residuals:                    1521   BIC:                            -3336.\n",
       "Df Model:                          57                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==========================================================================================\n",
       "                             coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------------------\n",
       "age10_ratio               -0.0377      0.039     -0.973      0.331      -0.114       0.038\n",
       "age20_ratio               -0.0408      0.022     -1.819      0.069      -0.085       0.003\n",
       "age30_ratio               -0.0298      0.015     -2.022      0.043      -0.059      -0.001\n",
       "age40_ratio               -0.0335      0.014     -2.474      0.013      -0.060      -0.007\n",
       "age50_ratio               -0.0038      0.015     -0.251      0.802      -0.033       0.026\n",
       "age60_ratio               -0.0374      0.023     -1.629      0.103      -0.082       0.008\n",
       "age70_ratio                0.0348      0.039      0.896      0.370      -0.041       0.111\n",
       "const                      0.0371      0.009      4.056      0.000       0.019       0.055\n",
       "found_age_1               -0.2369      0.049     -4.863      0.000      -0.332      -0.141\n",
       "found_age_2               -0.8163      0.075    -10.865      0.000      -0.964      -0.669\n",
       "found_age_3               -0.8607      0.092     -9.397      0.000      -1.040      -0.681\n",
       "found_age_4               -0.5980      0.063     -9.435      0.000      -0.722      -0.474\n",
       "found_age_5               -0.6009      0.068     -8.785      0.000      -0.735      -0.467\n",
       "indcd_a_yn                 0.0536      0.023      2.331      0.020       0.008       0.099\n",
       "indcd_b_yn             -3.854e-15   2.78e-15     -1.388      0.165    -9.3e-15    1.59e-15\n",
       "indcd_c_yn                 0.0576      0.005     11.226      0.000       0.048       0.068\n",
       "indcd_d_yn                 0.0991      0.075      1.317      0.188      -0.048       0.247\n",
       "indcd_e_yn              3.774e-15   2.13e-15      1.770      0.077   -4.09e-16    7.96e-15\n",
       "indcd_f_yn                 0.0243      0.011      2.141      0.032       0.002       0.047\n",
       "indcd_g_yn                 0.0794      0.004     18.185      0.000       0.071       0.088\n",
       "indcd_h_yn                 0.0492      0.009      5.460      0.000       0.032       0.067\n",
       "indcd_i_yn                 0.0634      0.004     15.029      0.000       0.055       0.072\n",
       "indcd_j_yn                 0.0079      0.011      0.700      0.484      -0.014       0.030\n",
       "indcd_k_yn                 0.0596      0.035      1.713      0.087      -0.009       0.128\n",
       "indcd_l_yn                 0.0233      0.014      1.642      0.101      -0.005       0.051\n",
       "indcd_m_yn                 0.0329      0.008      4.202      0.000       0.018       0.048\n",
       "indcd_n_yn                 0.0176      0.007      2.517      0.012       0.004       0.031\n",
       "indcd_o_yn              7.001e-17   4.12e-16      0.170      0.865   -7.39e-16    8.79e-16\n",
       "indcd_p_yn                 0.0470      0.006      7.877      0.000       0.035       0.059\n",
       "indcd_q_yn                 0.0521      0.007      7.059      0.000       0.038       0.067\n",
       "indcd_r_yn                 0.0518      0.006      8.183      0.000       0.039       0.064\n",
       "indcd_s_yn                 0.0791      0.005     16.755      0.000       0.070       0.088\n",
       "indcd_t_yn                 0.0443      0.080      0.556      0.578      -0.112       0.201\n",
       "indcd_u_yn               -2.5e-15   1.02e-15     -2.454      0.014    -4.5e-15   -5.02e-16\n",
       "rpr_per_age_bin_10        -0.0717      0.029     -2.447      0.015      -0.129      -0.014\n",
       "rpr_per_age_bin_20         0.0749      0.056      1.348      0.178      -0.034       0.184\n",
       "rpr_per_age_bin_30to50     0.9720      0.122      7.946      0.000       0.732       1.212\n",
       "rpr_per_age_bin_50over    -0.0859      0.090     -0.958      0.338      -0.262       0.090\n",
       "rpr_per_gender_f           0.5010      0.147      3.408      0.001       0.213       0.789\n",
       "rpr_per_gender_m           1.0387      0.121      8.580      0.000       0.801       1.276\n",
       "runout_cnt                -0.1477      0.056     -2.660      0.008      -0.257      -0.039\n",
       "sales_est_amt_201703      -0.8825      0.596     -1.480      0.139      -2.052       0.287\n",
       "sales_est_amt_201706       1.1936      0.669      1.783      0.075      -0.119       2.506\n",
       "sales_est_amt_201709       0.9649      0.738      1.308      0.191      -0.483       2.412\n",
       "sales_est_amt_201712      -1.6914      0.848     -1.996      0.046      -3.354      -0.029\n",
       "sales_est_amt_201803      -0.8397      0.997     -0.843      0.400      -2.794       1.115\n",
       "sales_est_amt_201806      -0.2613      0.739     -0.353      0.724      -1.712       1.189\n",
       "sales_est_amt_201809      -0.0270      0.685     -0.039      0.969      -1.370       1.316\n",
       "sales_est_amt_201812       3.6076      0.741      4.868      0.000       2.154       5.061\n",
       "sales_est_amt_201903      -2.6374      0.705     -3.743      0.000      -4.019      -1.255\n",
       "sales_est_amt_201906       1.0265      0.824      1.246      0.213      -0.590       2.643\n",
       "sales_est_amt_201909      -0.1669      0.787     -0.212      0.832      -1.710       1.376\n",
       "sales_est_amt_201912      -0.8312      0.770     -1.080      0.280      -2.341       0.679\n",
       "sales_est_amt_202003       0.2728      0.582      0.469      0.639      -0.869       1.415\n",
       "sales_est_amt_202006       0.3572      0.656      0.544      0.586      -0.930       1.645\n",
       "sales_est_amt_202009      -0.5143      0.563     -0.913      0.361      -1.619       0.591\n",
       "smbiz_yn_cnt              -0.2093      0.282     -0.743      0.457      -0.761       0.343\n",
       "sme_loan_cnt               0.1157      0.048      2.435      0.015       0.023       0.209\n",
       "sme_loan_y_1               0.1621      0.043      3.800      0.000       0.078       0.246\n",
       "sme_loan_y_2               0.1106      0.042      2.645      0.008       0.029       0.193\n",
       "sme_loan_y_3               0.0316      0.060      0.527      0.598      -0.086       0.149\n",
       "sme_loan_y_4               0.1318      0.083      1.585      0.113      -0.031       0.295\n",
       "sme_loan_y_5               0.0946      0.085      1.113      0.266      -0.072       0.261\n",
       "sme_loan_y_6               0.0775      0.109      0.714      0.475      -0.135       0.290\n",
       "ws_cnt                     0.8152      0.104      7.818      0.000       0.611       1.020\n",
       "==============================================================================\n",
       "Omnibus:                       22.530   Durbin-Watson:                   1.950\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):               23.413\n",
       "Skew:                          -0.273   Prob(JB):                     8.24e-06\n",
       "Kurtosis:                       3.240   Cond. No.                     1.05e+16\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The smallest eigenvalue is 3.62e-29. This might indicate that there are\n",
       "strong multicollinearity problems or that the design matrix is singular.\n",
       "\"\"\""
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fitted_full_model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "inclusive-abraham",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/app-root/lib/python3.6/site-packages/statsmodels/regression/linear_model.py:1715: RuntimeWarning: divide by zero encountered in double_scalars\n",
      "  return 1 - self.ssr/self.centered_tss\n",
      "/opt/app-root/lib/python3.6/site-packages/statsmodels/stats/outliers_influence.py:193: RuntimeWarning: divide by zero encountered in double_scalars\n",
      "  vif = 1. / (1. - r_squared_i)\n",
      "/opt/app-root/lib/python3.6/site-packages/statsmodels/regression/linear_model.py:1715: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  return 1 - self.ssr/self.centered_tss\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>VIF Factor</th>\n",
       "      <th>features</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>const</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>inf</td>\n",
       "      <td>ws_cnt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.151680</td>\n",
       "      <td>found_age_1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10.265032</td>\n",
       "      <td>found_age_2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7.773112</td>\n",
       "      <td>found_age_3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>7.787632</td>\n",
       "      <td>found_age_4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6.817680</td>\n",
       "      <td>found_age_5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>6.639352</td>\n",
       "      <td>found_age_6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>4.609560</td>\n",
       "      <td>runout_cnt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>134.479478</td>\n",
       "      <td>smbiz_yn_cnt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>inf</td>\n",
       "      <td>rpr_per_gender_m</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>inf</td>\n",
       "      <td>rpr_per_gender_f</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>inf</td>\n",
       "      <td>rpr_per_age_bin_10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>inf</td>\n",
       "      <td>rpr_per_age_bin_20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>inf</td>\n",
       "      <td>rpr_per_age_bin_30to50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>inf</td>\n",
       "      <td>rpr_per_age_bin_50over</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>inf</td>\n",
       "      <td>sme_loan_cnt</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>inf</td>\n",
       "      <td>sme_loan_y_1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>inf</td>\n",
       "      <td>sme_loan_y_2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>inf</td>\n",
       "      <td>sme_loan_y_3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>inf</td>\n",
       "      <td>sme_loan_y_4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>inf</td>\n",
       "      <td>sme_loan_y_5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>inf</td>\n",
       "      <td>sme_loan_y_6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>130.349480</td>\n",
       "      <td>sales_est_amt_201703</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>221.352596</td>\n",
       "      <td>sales_est_amt_201706</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>226.775774</td>\n",
       "      <td>sales_est_amt_201709</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>198.097262</td>\n",
       "      <td>sales_est_amt_201712</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>246.720227</td>\n",
       "      <td>sales_est_amt_201803</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>216.210163</td>\n",
       "      <td>sales_est_amt_201806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>186.906555</td>\n",
       "      <td>sales_est_amt_201809</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>205.134260</td>\n",
       "      <td>sales_est_amt_201812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>219.596016</td>\n",
       "      <td>sales_est_amt_201903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>315.324092</td>\n",
       "      <td>sales_est_amt_201906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>163.348329</td>\n",
       "      <td>sales_est_amt_201909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>137.704523</td>\n",
       "      <td>sales_est_amt_201912</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>179.788738</td>\n",
       "      <td>sales_est_amt_202003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>188.246405</td>\n",
       "      <td>sales_est_amt_202006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>126.939614</td>\n",
       "      <td>sales_est_amt_202009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>1.103434</td>\n",
       "      <td>age10_ratio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>1.278781</td>\n",
       "      <td>age20_ratio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>1.353898</td>\n",
       "      <td>age30_ratio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>1.392475</td>\n",
       "      <td>age40_ratio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>1.279985</td>\n",
       "      <td>age50_ratio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>1.175934</td>\n",
       "      <td>age60_ratio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>1.100902</td>\n",
       "      <td>age70_ratio</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>1.031255</td>\n",
       "      <td>indcd_a_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>NaN</td>\n",
       "      <td>indcd_b_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>1.401794</td>\n",
       "      <td>indcd_c_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>1.006115</td>\n",
       "      <td>indcd_d_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>NaN</td>\n",
       "      <td>indcd_e_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>1.166716</td>\n",
       "      <td>indcd_f_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>1.395190</td>\n",
       "      <td>indcd_g_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>1.080681</td>\n",
       "      <td>indcd_h_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>1.394006</td>\n",
       "      <td>indcd_i_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>1.394419</td>\n",
       "      <td>indcd_j_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>1.059526</td>\n",
       "      <td>indcd_k_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>1.342274</td>\n",
       "      <td>indcd_l_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>1.577223</td>\n",
       "      <td>indcd_m_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>1.340552</td>\n",
       "      <td>indcd_n_yn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>NaN</td>\n",
       "      <td>indcd_o_yn</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    VIF Factor                features\n",
       "0     0.000000                   const\n",
       "1          inf                  ws_cnt\n",
       "2     4.151680             found_age_1\n",
       "3    10.265032             found_age_2\n",
       "4     7.773112             found_age_3\n",
       "5     7.787632             found_age_4\n",
       "6     6.817680             found_age_5\n",
       "7     6.639352             found_age_6\n",
       "8     4.609560              runout_cnt\n",
       "9   134.479478            smbiz_yn_cnt\n",
       "10         inf        rpr_per_gender_m\n",
       "11         inf        rpr_per_gender_f\n",
       "12         inf      rpr_per_age_bin_10\n",
       "13         inf      rpr_per_age_bin_20\n",
       "14         inf  rpr_per_age_bin_30to50\n",
       "15         inf  rpr_per_age_bin_50over\n",
       "16         inf            sme_loan_cnt\n",
       "17         inf            sme_loan_y_1\n",
       "18         inf            sme_loan_y_2\n",
       "19         inf            sme_loan_y_3\n",
       "20         inf            sme_loan_y_4\n",
       "21         inf            sme_loan_y_5\n",
       "22         inf            sme_loan_y_6\n",
       "23  130.349480    sales_est_amt_201703\n",
       "24  221.352596    sales_est_amt_201706\n",
       "25  226.775774    sales_est_amt_201709\n",
       "26  198.097262    sales_est_amt_201712\n",
       "27  246.720227    sales_est_amt_201803\n",
       "28  216.210163    sales_est_amt_201806\n",
       "29  186.906555    sales_est_amt_201809\n",
       "30  205.134260    sales_est_amt_201812\n",
       "31  219.596016    sales_est_amt_201903\n",
       "32  315.324092    sales_est_amt_201906\n",
       "33  163.348329    sales_est_amt_201909\n",
       "34  137.704523    sales_est_amt_201912\n",
       "35  179.788738    sales_est_amt_202003\n",
       "36  188.246405    sales_est_amt_202006\n",
       "37  126.939614    sales_est_amt_202009\n",
       "38    1.103434             age10_ratio\n",
       "39    1.278781             age20_ratio\n",
       "40    1.353898             age30_ratio\n",
       "41    1.392475             age40_ratio\n",
       "42    1.279985             age50_ratio\n",
       "43    1.175934             age60_ratio\n",
       "44    1.100902             age70_ratio\n",
       "45    1.031255              indcd_a_yn\n",
       "46         NaN              indcd_b_yn\n",
       "47    1.401794              indcd_c_yn\n",
       "48    1.006115              indcd_d_yn\n",
       "49         NaN              indcd_e_yn\n",
       "50    1.166716              indcd_f_yn\n",
       "51    1.395190              indcd_g_yn\n",
       "52    1.080681              indcd_h_yn\n",
       "53    1.394006              indcd_i_yn\n",
       "54    1.394419              indcd_j_yn\n",
       "55    1.059526              indcd_k_yn\n",
       "56    1.342274              indcd_l_yn\n",
       "57    1.577223              indcd_m_yn\n",
       "58    1.340552              indcd_n_yn\n",
       "59         NaN              indcd_o_yn"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#다중공선성 제거를 위해 VIF값을 확인\n",
    "#VIF Factor 값이 10 이상 되는 독립변수들은 drop\n",
    "\n",
    "vif = pd.DataFrame()\n",
    "vif['VIF Factor'] = [variance_inflation_factor(df1_data.values, i) for i in range(df1_data.shape[1])]\n",
    "vif['features'] = df1_data.columns\n",
    "vif.head(60)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ranking-freeware",
   "metadata": {},
   "source": [
    "분기별 매출 데이터가 서로 강한 상관관계를 가지는 것을 알 수 있다. 따라서 이 변수들을 제거 혹은 하나로 합쳐 새로운 변수로 활용하는 과정이 필요하다.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "native-klein",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 학습 데이터 잔차\n",
    "res = fitted_full_model.resid\n",
    "pred_y = fitted_full_model.predict(train_x)\n",
    "# q-q plot / 정규분포 확인\n",
    "fig = sm.qqplot(res, fit=True, line='45')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "opposed-somalia",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Residual')"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZoAAAEGCAYAAABcolNbAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/Il7ecAAAACXBIWXMAAAsTAAALEwEAmpwYAAAUlElEQVR4nO3df7RlZX3f8fdHRn5ERPkxQcqPDBiSOEnpaG+QpGq6IggYw2iDimnqpJrQtJLGulztuGhYhq7VhdGYH0tXktG4ijQJCol1ajAIE0JSU4ELwvArOANqGBhgFH9VowJ++8d+Ro6Xe+/cmXufe+be+36tddZ59rOfs/fz7Nkzn9n77LN3qgpJknp52rg7IEla3gwaSVJXBo0kqSuDRpLUlUEjSepq1bg7sNCOOuqoWrNmzbi7IUlLys033/yFqlrdY9nLLmjWrFnD5OTkuLshSUtKks/3WranziRJXRk0kqSuDBpJUlcGjSSpK4NGktSVQSNJ6sqgkSR1ZdBIkroyaCRJXRk0kqSuDBpJUlcGjSSpK4NGktSVQSNJ6sqgkSR1ZdBIkroyaCRJXRk0kqSuDBpJUlcGjSSpK4NGktSVQSNJ6sqgkSR1NdagSXJWknuSbE+ycZr5b0lyV5KtSbYk+YFx9FOStO/GFjRJDgDeC5wNrAVel2TtlGafBiaq6hTgSuA3F7eXkqT5GucRzanA9qq6r6q+DVwOrB9tUFXXVdU32uSngOMWuY+SpHkaZ9AcC9w/Mr2j1c3kjcDHp5uR5Pwkk0kmd+3atYBdlCTN15K4GCDJLwATwDunm19Vm6pqoqomVq9evbidkyTNatUY1/0AcPzI9HGt7nskOR24EPipqvrWIvVNkrRAxnlEcxNwcpITkxwInAdsHm2Q5PnAHwLnVNUjY+ijJGmexhY0VfU4cAFwNXA38OGqujPJxUnOac3eCRwKXJHk1iSbZ1icJGk/Nc5TZ1TVVcBVU+ouGimfvuidkiQtqCVxMYAkaekyaCRJXRk0kqSuDBpJUlcGjSSpK4NGktSVQSNJ6sqgkSR1ZdBIkroyaCRJXRk0kqSuDBpJUlcGjSSpK4NGktSVQSNJ6sqgkSR1ZdBIkroyaCRJXRk0kqSuDBpJUlcGjSSpK4NGktSVQSNJ6mqsQZPkrCT3JNmeZOM081+S5JYkjyc5dxx9lCTNz9iCJskBwHuBs4G1wOuSrJ3S7B+AXwT+ZHF7J0laKKvGuO5Tge1VdR9AksuB9cBduxtU1efavO+Mo4OSpPkb56mzY4H7R6Z3tLq9luT8JJNJJnft2rUgnZMkLYxlcTFAVW2qqomqmli9evW4uyNJGjHOoHkAOH5k+rhWJ0laRsYZNDcBJyc5McmBwHnA5jH2R5LUwdiCpqoeBy4ArgbuBj5cVXcmuTjJOQBJfjzJDuDVwB8muXNc/ZUk7ZtxXnVGVV0FXDWl7qKR8k0Mp9QkSUvUsrgYQJK0/zJoJEldGTSSpK4MGklSVwaNJKkrg0aS1JVBI0nqyqCRJHVl0EiSujJoJEldGTSSpK4MGklSVwaNJKkrg0aS1JVBI0nqyqCRJHVl0EiSujJoJEldGTSSpK4MGklSVwaNJKkrg0aS1JVBI0nqaqxBk+SsJPck2Z5k4zTzD0ryoTb/hiRrxtBNSdI8jC1okhwAvBc4G1gLvC7J2inN3gh8qap+EPht4B2L20tJ0nytmm1mkrfMNr+q3j2PdZ8KbK+q+9q6LgfWA3eNtFkPvL2VrwTekyRVVfNYryRpEc0aNMAzO677WOD+kekdwAtnalNVjyf5CnAk8IXRRknOB84HOOGEE3r1V5K0D2YNmqr6jcXqyHxU1SZgE8DExIRHO5K0H9nTEQ0ASQ5m+L7kR4GDd9dX1Rvmse4HgONHpo9rddO12ZFkFfAs4IvzWKckaZHN9WKAy4DnAGcC1zOEwtfmue6bgJOTnJjkQOA8YPOUNpuBDa18LvBXfj8jSUvLXIPmB6vq14GvV9WlwM/w1O9T9kpVPQ5cAFwN3A18uKruTHJxknNasz8CjkyyHXgL8JRLoCVJ+7c5nToDHmvvX07yY8BDwPfPd+VVdRVw1ZS6i0bK3wRePd/1SJLGZ65BsynJ4cCvM5zOOhS4aPaPSJI0x6Cpqve34vXASf26I0labuZ61dm0Ry9VdfHCdkeStNzM9dTZ10fKBwOvYPgCX5KkWc311NlvjU4neRfD1WKSJM1qX2+q+X0Mv6WRJGlWc/2O5nZg9w8lDwBWA34/I0nao7l+R/OKkfLjwMPtB5eSJM1qT48JOKIVp95u5rAkVNWjfbolSVou9nREczPDKbMAJwBfauVnA/8AnNizc5KkpW/WiwGq6sSqOgm4FvjZqjqqqo5kOJX2icXooCRpaZvrVWentfuSAVBVHwd+sk+XJEnLyVwvBngwyX8F/meb/tfAg326JElaTuZ6RPM6hkuaP9Je39/qJEma1VzvDPAo8Gud+yJJWob2dHnz71TVm5P8b578weZ3VdU503xMkqTv2tMRzWXt/V29OyJJWp5mDZqqurm9X7+7rj0A7fiq2tq5b5KkZWBOFwMk+eskh7U7BdwCvC/Ju/t2TZK0HMz1qrNnVdVXgX8FfLCqXgic3q9bkqTlYq5BsyrJMcBrgI917I8kaZmZa9BczPCgs3ur6qYkJwHb+nVLkrRczPV3NFcAV4xM3wf8XK9OSZKWj7leDPBDSbYkuaNNn9JuSbNPkhyR5Jok29r74TO0+8skX07i6TpJWqLmeursfcDbgMcA2qXN581jvRuBLVV1MrClTU/nncC/mcd6JEljNteg+b6qunFK3XyesLkeuLSVLwVeOV2jqtrCUx+6JklaQuYaNF9I8lzabWiSnAvsnMd6j66q3Z9/CDh6HssiyflJJpNM7tq1az6LkiQtsLk+JuBNwCbgR5I8AHyW4VEBM0pyLfCcaWZdODpRVZXkKfdR2xtVtan1j4mJiXktS5K0sOZ61dl9wOlJnsFwFPQNhu9oPj/LZ2b8QWeSh5McU1U72+9zHtm7bkuSlopZT5212868Lcl7kpzBEDAbgO0MP97cV5vbcmjvH53HsiRJ+7E9fUdzGfDDwO3ALwPXAa8GXlVV6+ex3kuAM5JsY7iVzSUASSaSvH93oyR/y/D7nZcm2ZHkzHmsU5I0Bns6dXZSVf1TgBYAO4ETquqb81lpVX0ReOk09ZPAL41Mv3g+65Ekjd+ejmge212oqieAHfMNGUnSyrKnI5p/luSrrRzgkDYdhgvGDuvaO0nSkrenB58dsFgdkSQtT3P9waYkSfvEoJEkdWXQSJK6MmgkSV0ZNJKkrgwaSVJXBo0kqSuDRpLUlUEjSerKoJEkdWXQSJK6MmgkSV0ZNJKkrgwaSVJXBo0kqSuDRpLUlUEjSerKoJEkdWXQSJK6MmgkSV2NJWiSHJHkmiTb2vvh07RZl+T/JrkzydYkrx1HXyVJ8zOuI5qNwJaqOhnY0qan+gbw+qr6UeAs4HeSPHvxuihJWgjjCpr1wKWtfCnwyqkNquozVbWtlR8EHgFWL1YHJUkLY1xBc3RV7Wzlh4CjZ2uc5FTgQODeGeafn2QyyeSuXbsWtqeSpHlZ1WvBSa4FnjPNrAtHJ6qqktQsyzkGuAzYUFXfma5NVW0CNgFMTEzMuCxJ0uLrFjRVdfpM85I8nOSYqtrZguSRGdodBvwFcGFVfapTVyVJHY3r1NlmYEMrbwA+OrVBkgOBjwAfrKorF7FvkqQFNK6guQQ4I8k24PQ2TZKJJO9vbV4DvAT4xSS3tte6sfRWkrTPUrW8vtKYmJioycnJcXdDkpaUJDdX1USPZXtnAElSVwaNJKkrg0aS1JVBI0nqyqCRJHVl0EiSujJoJEldGTSSpK4MGklSVwaNJKkrg0aS1JVBI0nqyqCRJHVl0EiSujJoJEldGTSSpK4MGklSVwaNJKkrg0aS1JVBI0nqyqCRJHVl0EiSujJoJEldjSVokhyR5Jok29r74dO0+YEktyS5NcmdSX5lHH2VJM3PuI5oNgJbqupkYEubnmon8BNVtQ54IbAxyT9ZvC5KkhbCuIJmPXBpK18KvHJqg6r6dlV9q00ehKf5JGlJGtc/3kdX1c5Wfgg4erpGSY5PshW4H3hHVT04Q7vzk0wmmdy1a1efHkuS9smqXgtOci3wnGlmXTg6UVWVpKZbRlXdD5zSTpn9ryRXVtXD07TbBGwCmJiYmHZZkqTx6BY0VXX6TPOSPJzkmKrameQY4JE9LOvBJHcALwauXOCuSpI6Gteps83AhlbeAHx0aoMkxyU5pJUPB14E3LNoPZQkLYhxBc0lwBlJtgGnt2mSTCR5f2vzPOCGJLcB1wPvqqrbx9JbSdI+63bqbDZV9UXgpdPUTwK/1MrXAKcsctckSQvMS4YlSV0ZNJKkrgwaSVJXBo0kqSuDRpLUlUEjSerKoJEkdWXQSJK6MmgkSV0ZNJKkrgwaSVJXBo0kqSuDRpLUlUEjSerKoJEkdWXQSJK6MmgkSV0ZNJKkrgwaSVJXBo0kqSuDRpLUlUEjSerKoJEkdWXQSJK6SlWNuw8LKsku4PN7+bGjgC906M5SstK3geNf2eMHt8EPV9Uzeyx4VY+FjlNVrd7bzySZrKqJHv1ZKlb6NnD8K3v84DZIMtlr2Z46kyR1ZdBIkroyaAabxt2B/cBK3waOXyt9G3Qb/7K7GECStH/xiEaS1JVBI0nqalkHTZLPJbk9ya27L91LckSSa5Jsa++Ht/ok+b0k25NsTfKCkeVsaO23JdkwrvHsSZIPJHkkyR0jdQs23iT/vG3P7e2zWdwRzm6G8b89yQNtH7g1yctH5r2tjeWeJGeO1J/V6rYn2ThSf2KSG1r9h5IcuHijm5skxye5LsldSe5M8mutfkXsB7OMf0XsB0kOTnJjktva+H+j1U/b5yQHtentbf6akWXt1XaZVVUt2xfwOeCoKXW/CWxs5Y3AO1r55cDHgQCnATe0+iOA+9r74a18+LjHNsN4XwK8ALijx3iBG1vbtM+ePe4xz2H8bwfeOk3btcBtwEHAicC9wAHtdS9wEnBga7O2febDwHmt/AfAvx/3mKcZ1zHAC1r5mcBn2lhXxH4wy/hXxH7Q/kwObeWnAze0P6tp+wz8B+APWvk84EP7ul1mey3rI5oZrAcubeVLgVeO1H+wBp8Cnp3kGOBM4JqqerSqvgRcA5y1yH2ek6r6G+DRKdULMt4277Cq+lQNe+IHR5a1X5hh/DNZD1xeVd+qqs8C24FT22t7Vd1XVd8GLgfWt/+1/zRwZfv86Lbcb1TVzqq6pZW/BtwNHMsK2Q9mGf9MltV+0P4c/1+bfHp7FTP3eXS/uBJ4aRvjXm2XPfVruQdNAZ9IcnOS81vd0VW1s5UfAo5u5WOB+0c+u6PVzVS/VCzUeI9t5an1S8EF7bTQB3afMmLvx38k8OWqenxK/X6rnQZ5PsP/alfcfjBl/LBC9oMkByS5FXiE4T8I9zJzn787zjb/KwxjXNB/D5d70Lyoql4AnA28KclLRme2/5GtmOu7V9p4m98HngusA3YCvzXW3iySJIcCfwa8uaq+OjpvJewH04x/xewHVfVEVa0DjmM4AvmR8fZomQdNVT3Q3h8BPsKw0R9uh/+090da8weA40c+flyrm6l+qVio8T7QylPr92tV9XD7i/cd4H0M+wDs/fi/yHBaadWU+v1Okqcz/CP7x1X15616xewH041/Je4HVfVl4DrgJ5i5z98dZ5v/LIYxLui/h8s2aJI8I8kzd5eBlwF3AJuB3VfQbAA+2sqbgde3q3BOA77STjVcDbwsyeHtcPtlrW6pWJDxtnlfTXJaO4f7+pFl7bd2/+PavIphH4Bh/Oe1q25OBE5m+JL7JuDkdpXOgQxfkG5uRwHXAee2z49uy/1G+7P5I+Duqnr3yKwVsR/MNP6Vsh8kWZ3k2a18CHAGw/dUM/V5dL84F/irNsa92i577FiPKx/2hxfDVRG3tdedwIWt/khgC7ANuBY4op68WuO9DOczbwcmRpb1BoYvw7YD/3bcY5tlzH/KcFrgMYZzp29cyPECEwx/Qe8F3kO7s8T+8pph/Je18W1tfyGOGWl/YRvLPYxcOcVwJdZn2rwLp+xTN7btcgVw0LjHPM02eBHDabGtwK3t9fKVsh/MMv4VsR8ApwCfbuO8A7hotj4DB7fp7W3+Sfu6XWZ7eQsaSVJXy/bUmSRp/2DQSJK6MmgkSV0ZNJKkrgwaSVJXBo1WnCRP5Mm7+N6aZE2Sv2vz1iT5+ZG26zJyp9+9WMdfJ5lYgL4uyHKkcTJotBL9Y1WtG3l9rqp+ss1bA/z8SNt1DL8bkLSPDBoJSLL7jreXAC9uRzr/BbgYeG2bfm2748QHMjzz49NJ1rfPH5Lk8iR3J/kIcMg06zgryRUj0/8yycda+feTTGbkGSKz9JEk5yb5H628OsmfJbmpvf5Fq/+pkaO2T+++U4a02FbtuYm07BzS7m4L8NmqetXIvI0Mzy15BUCShxl+LX9Bm/7vDLfpeEO71ceNSa4F/h3wjap6XpJTgFumWe+1wKYkz6iqrwOvZbjNOgy/sH40yQHAliSnVNXWOY7nd4Hfrqr/k+QEhtvHPA94K/CmqvpkhptMfnOOy5MWlEGjlegfa7i77b54GXBOkre26YOBExgeuvZ7AFW1NclTQqKqHk/yl8DPJrkS+BngP7fZr8nwKItVDA/vWstwG5G5OB1YmycfdHlYC5ZPAu9O8sfAn1fVjpkWIPVk0Eh7J8DPVdU931M596cZXw5cwPCAtsmq+lq7aeFbgR+vqi+1U2IHT/PZ0ftFjc5/GnBaVU09YrkkyV8wfMf0ySRnVtXfz7Wj0kLxOxrpe32N4RHAM01fDfxqu0swSZ7f6v+GdhFBkh9juLnhdK5neNz0L/PkabPDgK8DX0lyNMPzk6bzcJLnJXkawx2Id/sE8Ku7J5Ksa+/Prarbq+odDHfdHftzSbQyGTTS99oKPJHktiT/ieH26mt3XwwA/DeGx+NuTXJnm4bhwVqHJrmb4QKCm6dbeFU9AXyMIUw+1upuY7jj7t8Df8Jwyms6G9tn/o7hLtW7/UdgIsPTI+8CfqXVvznJHe003mPAx/duU0gLw7s3S5K68ohGktSVQSNJ6sqgkSR1ZdBIkroyaCRJXRk0kqSuDBpJUlf/HytdAQ0yKM5QAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# residual pattern 확인.... ?\n",
    "fig = plt.scatter(pred_y, res, s=4)\n",
    "plt.xlim(4000, 30000)\n",
    "plt.xlim(4000, 30000)\n",
    "plt.xlabel('Fitted values')\n",
    "plt.ylabel('Residual')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "assured-arizona",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "859     0.166977\n",
       "607     0.423865\n",
       "1636    0.081227\n",
       "1679    0.187487\n",
       "2155    0.062413\n",
       "          ...   \n",
       "250     0.091364\n",
       "1168    0.090942\n",
       "2196    0.267731\n",
       "1805    0.066283\n",
       "1202    0.112068\n",
       "Length: 678, dtype: float64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 검증 데이터에 대한 예측\n",
    "pred_y = fitted_full_model.predict(test_x)\n",
    "pred_y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "combined-prior",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 잔차 plot\n",
    "plt.plot(np.array(test_y-pred_y), label = 'pred_full')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "excellent-challenge",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.006367890179356067"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## MSE 성능\n",
    "mean_squared_error(y_true=test_y, y_pred=pred_y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "unnecessary-detail",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'model': <statsmodels.regression.linear_model.RegressionResultsWrapper object at 0x7f32dd5c6cc0>, 'AIC': -763.2865832573552}\n"
     ]
    }
   ],
   "source": [
    "def processSubset(X, y, feature_set):\n",
    "    model = sm.OLS(y, X[list(feature_set)])\n",
    "    regr = model.fit() #모델 학습  \n",
    "    AIC = regr.aic #모델의 AIC\n",
    "    return{'model':regr, 'AIC':AIC}\n",
    "\n",
    "print(processSubset(X=train_x, y=train_y, feature_set = feature_columns[0:5]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "external-stereo",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'model': <statsmodels.regression.linear_model.RegressionResultsWrapper at 0x7f32dd5a4710>,\n",
       " 'AIC': -3646.7041721340847}"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "processSubset(X=train_x, y=train_y, feature_set = feature_columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "verified-consistency",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "processed 2016 models on 2 predictors in 3.237295389175415 seconds.\n",
      "model    <statsmodels.regression.linear_model.Regressio...\n",
      "AIC                                               -2445.91\n",
      "Name: 1487, dtype: object\n"
     ]
    }
   ],
   "source": [
    "import time\n",
    "import itertools\n",
    "\n",
    "def getBest(X, y, k):\n",
    "    tic = time.time()\n",
    "    results = []\n",
    "    for combo in itertools.combinations(X.columns.difference(['const']),k):\n",
    "        combo = (list(combo)+['const'])\n",
    "        results.append(processSubset(X,y,feature_set=combo))\n",
    "    models = pd.DataFrame(results)\n",
    "    best_model = models.loc[models['AIC'].argmin()]\n",
    "    toc = time.time()\n",
    "    print('processed', models.shape[0], 'models on', k, 'predictors in', (toc-tic), 'seconds.')\n",
    "    return best_model\n",
    "print(getBest(X=train_x, y=train_y,k=2))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "swiss-corruption",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['age10_ratio', 'age20_ratio', 'const']\n",
      "['age10_ratio', 'age30_ratio', 'const']\n",
      "['age10_ratio', 'age40_ratio', 'const']\n",
      "['age10_ratio', 'age50_ratio', 'const']\n",
      "['age10_ratio', 'age60_ratio', 'const']\n",
      "['age10_ratio', 'age70_ratio', 'const']\n",
      "['age10_ratio', 'found_age_1', 'const']\n",
      "['age10_ratio', 'found_age_2', 'const']\n",
      "['age10_ratio', 'found_age_3', 'const']\n",
      "['age10_ratio', 'found_age_4', 'const']\n",
      "['age10_ratio', 'found_age_5', 'const']\n",
      "['age10_ratio', 'indcd_a_yn', 'const']\n",
      "['age10_ratio', 'indcd_b_yn', 'const']\n",
      "['age10_ratio', 'indcd_c_yn', 'const']\n",
      "['age10_ratio', 'indcd_d_yn', 'const']\n",
      "['age10_ratio', 'indcd_e_yn', 'const']\n",
      "['age10_ratio', 'indcd_f_yn', 'const']\n",
      "['age10_ratio', 'indcd_g_yn', 'const']\n",
      "['age10_ratio', 'indcd_h_yn', 'const']\n",
      "['age10_ratio', 'indcd_i_yn', 'const']\n",
      "['age10_ratio', 'indcd_j_yn', 'const']\n",
      "['age10_ratio', 'indcd_k_yn', 'const']\n",
      "['age10_ratio', 'indcd_l_yn', 'const']\n",
      "['age10_ratio', 'indcd_m_yn', 'const']\n",
      "['age10_ratio', 'indcd_n_yn', 'const']\n",
      "['age10_ratio', 'indcd_o_yn', 'const']\n",
      "['age10_ratio', 'indcd_p_yn', 'const']\n",
      "['age10_ratio', 'indcd_q_yn', 'const']\n",
      "['age10_ratio', 'indcd_r_yn', 'const']\n",
      "['age10_ratio', 'indcd_s_yn', 'const']\n",
      "['age10_ratio', 'indcd_t_yn', 'const']\n",
      "['age10_ratio', 'indcd_u_yn', 'const']\n",
      "['age10_ratio', 'rpr_per_age_bin_10', 'const']\n",
      "['age10_ratio', 'rpr_per_age_bin_20', 'const']\n",
      "['age10_ratio', 'rpr_per_age_bin_30to50', 'const']\n",
      "['age10_ratio', 'rpr_per_age_bin_50over', 'const']\n",
      "['age10_ratio', 'rpr_per_gender_f', 'const']\n",
      "['age10_ratio', 'rpr_per_gender_m', 'const']\n",
      "['age10_ratio', 'runout_cnt', 'const']\n",
      "['age10_ratio', 'sales_est_amt_201703', 'const']\n",
      "['age10_ratio', 'sales_est_amt_201706', 'const']\n",
      "['age10_ratio', 'sales_est_amt_201709', 'const']\n",
      "['age10_ratio', 'sales_est_amt_201712', 'const']\n",
      "['age10_ratio', 'sales_est_amt_201803', 'const']\n",
      "['age10_ratio', 'sales_est_amt_201806', 'const']\n",
      "['age10_ratio', 'sales_est_amt_201809', 'const']\n",
      "['age10_ratio', 'sales_est_amt_201812', 'const']\n",
      "['age10_ratio', 'sales_est_amt_201903', 'const']\n",
      "['age10_ratio', 'sales_est_amt_201906', 'const']\n",
      "['age10_ratio', 'sales_est_amt_201909', 'const']\n",
      "['age10_ratio', 'sales_est_amt_201912', 'const']\n",
      "['age10_ratio', 'sales_est_amt_202003', 'const']\n",
      "['age10_ratio', 'sales_est_amt_202006', 'const']\n",
      "['age10_ratio', 'sales_est_amt_202009', 'const']\n",
      "['age10_ratio', 'smbiz_yn_cnt', 'const']\n",
      "['age10_ratio', 'sme_loan_cnt', 'const']\n",
      "['age10_ratio', 'sme_loan_y_1', 'const']\n",
      "['age10_ratio', 'sme_loan_y_2', 'const']\n",
      "['age10_ratio', 'sme_loan_y_3', 'const']\n",
      "['age10_ratio', 'sme_loan_y_4', 'const']\n",
      "['age10_ratio', 'sme_loan_y_5', 'const']\n",
      "['age10_ratio', 'sme_loan_y_6', 'const']\n",
      "['age10_ratio', 'ws_cnt', 'const']\n",
      "['age20_ratio', 'age30_ratio', 'const']\n",
      "['age20_ratio', 'age40_ratio', 'const']\n",
      "['age20_ratio', 'age50_ratio', 'const']\n",
      "['age20_ratio', 'age60_ratio', 'const']\n",
      "['age20_ratio', 'age70_ratio', 'const']\n",
      "['age20_ratio', 'found_age_1', 'const']\n",
      "['age20_ratio', 'found_age_2', 'const']\n",
      "['age20_ratio', 'found_age_3', 'const']\n",
      "['age20_ratio', 'found_age_4', 'const']\n",
      "['age20_ratio', 'found_age_5', 'const']\n",
      "['age20_ratio', 'indcd_a_yn', 'const']\n",
      "['age20_ratio', 'indcd_b_yn', 'const']\n",
      "['age20_ratio', 'indcd_c_yn', 'const']\n",
      "['age20_ratio', 'indcd_d_yn', 'const']\n",
      "['age20_ratio', 'indcd_e_yn', 'const']\n",
      "['age20_ratio', 'indcd_f_yn', 'const']\n",
      "['age20_ratio', 'indcd_g_yn', 'const']\n",
      "['age20_ratio', 'indcd_h_yn', 'const']\n",
      "['age20_ratio', 'indcd_i_yn', 'const']\n",
      "['age20_ratio', 'indcd_j_yn', 'const']\n",
      "['age20_ratio', 'indcd_k_yn', 'const']\n",
      "['age20_ratio', 'indcd_l_yn', 'const']\n",
      "['age20_ratio', 'indcd_m_yn', 'const']\n",
      "['age20_ratio', 'indcd_n_yn', 'const']\n",
      "['age20_ratio', 'indcd_o_yn', 'const']\n",
      "['age20_ratio', 'indcd_p_yn', 'const']\n",
      "['age20_ratio', 'indcd_q_yn', 'const']\n",
      "['age20_ratio', 'indcd_r_yn', 'const']\n",
      "['age20_ratio', 'indcd_s_yn', 'const']\n",
      "['age20_ratio', 'indcd_t_yn', 'const']\n",
      "['age20_ratio', 'indcd_u_yn', 'const']\n",
      "['age20_ratio', 'rpr_per_age_bin_10', 'const']\n",
      "['age20_ratio', 'rpr_per_age_bin_20', 'const']\n",
      "['age20_ratio', 'rpr_per_age_bin_30to50', 'const']\n",
      "['age20_ratio', 'rpr_per_age_bin_50over', 'const']\n",
      "['age20_ratio', 'rpr_per_gender_f', 'const']\n",
      "['age20_ratio', 'rpr_per_gender_m', 'const']\n",
      "['age20_ratio', 'runout_cnt', 'const']\n",
      "['age20_ratio', 'sales_est_amt_201703', 'const']\n",
      "['age20_ratio', 'sales_est_amt_201706', 'const']\n",
      "['age20_ratio', 'sales_est_amt_201709', 'const']\n",
      "['age20_ratio', 'sales_est_amt_201712', 'const']\n",
      "['age20_ratio', 'sales_est_amt_201803', 'const']\n",
      "['age20_ratio', 'sales_est_amt_201806', 'const']\n",
      "['age20_ratio', 'sales_est_amt_201809', 'const']\n",
      "['age20_ratio', 'sales_est_amt_201812', 'const']\n",
      "['age20_ratio', 'sales_est_amt_201903', 'const']\n",
      "['age20_ratio', 'sales_est_amt_201906', 'const']\n",
      "['age20_ratio', 'sales_est_amt_201909', 'const']\n",
      "['age20_ratio', 'sales_est_amt_201912', 'const']\n",
      "['age20_ratio', 'sales_est_amt_202003', 'const']\n",
      "['age20_ratio', 'sales_est_amt_202006', 'const']\n",
      "['age20_ratio', 'sales_est_amt_202009', 'const']\n",
      "['age20_ratio', 'smbiz_yn_cnt', 'const']\n",
      "['age20_ratio', 'sme_loan_cnt', 'const']\n",
      "['age20_ratio', 'sme_loan_y_1', 'const']\n",
      "['age20_ratio', 'sme_loan_y_2', 'const']\n",
      "['age20_ratio', 'sme_loan_y_3', 'const']\n",
      "['age20_ratio', 'sme_loan_y_4', 'const']\n",
      "['age20_ratio', 'sme_loan_y_5', 'const']\n",
      "['age20_ratio', 'sme_loan_y_6', 'const']\n",
      "['age20_ratio', 'ws_cnt', 'const']\n",
      "['age30_ratio', 'age40_ratio', 'const']\n",
      "['age30_ratio', 'age50_ratio', 'const']\n",
      "['age30_ratio', 'age60_ratio', 'const']\n",
      "['age30_ratio', 'age70_ratio', 'const']\n",
      "['age30_ratio', 'found_age_1', 'const']\n",
      "['age30_ratio', 'found_age_2', 'const']\n",
      "['age30_ratio', 'found_age_3', 'const']\n",
      "['age30_ratio', 'found_age_4', 'const']\n",
      "['age30_ratio', 'found_age_5', 'const']\n",
      "['age30_ratio', 'indcd_a_yn', 'const']\n",
      "['age30_ratio', 'indcd_b_yn', 'const']\n",
      "['age30_ratio', 'indcd_c_yn', 'const']\n",
      "['age30_ratio', 'indcd_d_yn', 'const']\n",
      "['age30_ratio', 'indcd_e_yn', 'const']\n",
      "['age30_ratio', 'indcd_f_yn', 'const']\n",
      "['age30_ratio', 'indcd_g_yn', 'const']\n",
      "['age30_ratio', 'indcd_h_yn', 'const']\n",
      "['age30_ratio', 'indcd_i_yn', 'const']\n",
      "['age30_ratio', 'indcd_j_yn', 'const']\n",
      "['age30_ratio', 'indcd_k_yn', 'const']\n",
      "['age30_ratio', 'indcd_l_yn', 'const']\n",
      "['age30_ratio', 'indcd_m_yn', 'const']\n",
      "['age30_ratio', 'indcd_n_yn', 'const']\n",
      "['age30_ratio', 'indcd_o_yn', 'const']\n",
      "['age30_ratio', 'indcd_p_yn', 'const']\n",
      "['age30_ratio', 'indcd_q_yn', 'const']\n",
      "['age30_ratio', 'indcd_r_yn', 'const']\n",
      "['age30_ratio', 'indcd_s_yn', 'const']\n",
      "['age30_ratio', 'indcd_t_yn', 'const']\n",
      "['age30_ratio', 'indcd_u_yn', 'const']\n",
      "['age30_ratio', 'rpr_per_age_bin_10', 'const']\n",
      "['age30_ratio', 'rpr_per_age_bin_20', 'const']\n",
      "['age30_ratio', 'rpr_per_age_bin_30to50', 'const']\n",
      "['age30_ratio', 'rpr_per_age_bin_50over', 'const']\n",
      "['age30_ratio', 'rpr_per_gender_f', 'const']\n",
      "['age30_ratio', 'rpr_per_gender_m', 'const']\n",
      "['age30_ratio', 'runout_cnt', 'const']\n",
      "['age30_ratio', 'sales_est_amt_201703', 'const']\n",
      "['age30_ratio', 'sales_est_amt_201706', 'const']\n",
      "['age30_ratio', 'sales_est_amt_201709', 'const']\n",
      "['age30_ratio', 'sales_est_amt_201712', 'const']\n",
      "['age30_ratio', 'sales_est_amt_201803', 'const']\n",
      "['age30_ratio', 'sales_est_amt_201806', 'const']\n",
      "['age30_ratio', 'sales_est_amt_201809', 'const']\n",
      "['age30_ratio', 'sales_est_amt_201812', 'const']\n",
      "['age30_ratio', 'sales_est_amt_201903', 'const']\n",
      "['age30_ratio', 'sales_est_amt_201906', 'const']\n",
      "['age30_ratio', 'sales_est_amt_201909', 'const']\n",
      "['age30_ratio', 'sales_est_amt_201912', 'const']\n",
      "['age30_ratio', 'sales_est_amt_202003', 'const']\n",
      "['age30_ratio', 'sales_est_amt_202006', 'const']\n",
      "['age30_ratio', 'sales_est_amt_202009', 'const']\n",
      "['age30_ratio', 'smbiz_yn_cnt', 'const']\n",
      "['age30_ratio', 'sme_loan_cnt', 'const']\n",
      "['age30_ratio', 'sme_loan_y_1', 'const']\n",
      "['age30_ratio', 'sme_loan_y_2', 'const']\n",
      "['age30_ratio', 'sme_loan_y_3', 'const']\n",
      "['age30_ratio', 'sme_loan_y_4', 'const']\n",
      "['age30_ratio', 'sme_loan_y_5', 'const']\n",
      "['age30_ratio', 'sme_loan_y_6', 'const']\n",
      "['age30_ratio', 'ws_cnt', 'const']\n",
      "['age40_ratio', 'age50_ratio', 'const']\n",
      "['age40_ratio', 'age60_ratio', 'const']\n",
      "['age40_ratio', 'age70_ratio', 'const']\n",
      "['age40_ratio', 'found_age_1', 'const']\n",
      "['age40_ratio', 'found_age_2', 'const']\n",
      "['age40_ratio', 'found_age_3', 'const']\n",
      "['age40_ratio', 'found_age_4', 'const']\n",
      "['age40_ratio', 'found_age_5', 'const']\n",
      "['age40_ratio', 'indcd_a_yn', 'const']\n",
      "['age40_ratio', 'indcd_b_yn', 'const']\n",
      "['age40_ratio', 'indcd_c_yn', 'const']\n",
      "['age40_ratio', 'indcd_d_yn', 'const']\n",
      "['age40_ratio', 'indcd_e_yn', 'const']\n",
      "['age40_ratio', 'indcd_f_yn', 'const']\n",
      "['age40_ratio', 'indcd_g_yn', 'const']\n",
      "['age40_ratio', 'indcd_h_yn', 'const']\n",
      "['age40_ratio', 'indcd_i_yn', 'const']\n",
      "['age40_ratio', 'indcd_j_yn', 'const']\n",
      "['age40_ratio', 'indcd_k_yn', 'const']\n",
      "['age40_ratio', 'indcd_l_yn', 'const']\n",
      "['age40_ratio', 'indcd_m_yn', 'const']\n",
      "['age40_ratio', 'indcd_n_yn', 'const']\n",
      "['age40_ratio', 'indcd_o_yn', 'const']\n",
      "['age40_ratio', 'indcd_p_yn', 'const']\n",
      "['age40_ratio', 'indcd_q_yn', 'const']\n",
      "['age40_ratio', 'indcd_r_yn', 'const']\n",
      "['age40_ratio', 'indcd_s_yn', 'const']\n",
      "['age40_ratio', 'indcd_t_yn', 'const']\n",
      "['age40_ratio', 'indcd_u_yn', 'const']\n",
      "['age40_ratio', 'rpr_per_age_bin_10', 'const']\n",
      "['age40_ratio', 'rpr_per_age_bin_20', 'const']\n",
      "['age40_ratio', 'rpr_per_age_bin_30to50', 'const']\n",
      "['age40_ratio', 'rpr_per_age_bin_50over', 'const']\n",
      "['age40_ratio', 'rpr_per_gender_f', 'const']\n",
      "['age40_ratio', 'rpr_per_gender_m', 'const']\n",
      "['age40_ratio', 'runout_cnt', 'const']\n",
      "['age40_ratio', 'sales_est_amt_201703', 'const']\n",
      "['age40_ratio', 'sales_est_amt_201706', 'const']\n",
      "['age40_ratio', 'sales_est_amt_201709', 'const']\n",
      "['age40_ratio', 'sales_est_amt_201712', 'const']\n",
      "['age40_ratio', 'sales_est_amt_201803', 'const']\n",
      "['age40_ratio', 'sales_est_amt_201806', 'const']\n",
      "['age40_ratio', 'sales_est_amt_201809', 'const']\n",
      "['age40_ratio', 'sales_est_amt_201812', 'const']\n",
      "['age40_ratio', 'sales_est_amt_201903', 'const']\n",
      "['age40_ratio', 'sales_est_amt_201906', 'const']\n",
      "['age40_ratio', 'sales_est_amt_201909', 'const']\n",
      "['age40_ratio', 'sales_est_amt_201912', 'const']\n",
      "['age40_ratio', 'sales_est_amt_202003', 'const']\n",
      "['age40_ratio', 'sales_est_amt_202006', 'const']\n",
      "['age40_ratio', 'sales_est_amt_202009', 'const']\n",
      "['age40_ratio', 'smbiz_yn_cnt', 'const']\n",
      "['age40_ratio', 'sme_loan_cnt', 'const']\n",
      "['age40_ratio', 'sme_loan_y_1', 'const']\n",
      "['age40_ratio', 'sme_loan_y_2', 'const']\n",
      "['age40_ratio', 'sme_loan_y_3', 'const']\n",
      "['age40_ratio', 'sme_loan_y_4', 'const']\n",
      "['age40_ratio', 'sme_loan_y_5', 'const']\n",
      "['age40_ratio', 'sme_loan_y_6', 'const']\n",
      "['age40_ratio', 'ws_cnt', 'const']\n",
      "['age50_ratio', 'age60_ratio', 'const']\n",
      "['age50_ratio', 'age70_ratio', 'const']\n",
      "['age50_ratio', 'found_age_1', 'const']\n",
      "['age50_ratio', 'found_age_2', 'const']\n",
      "['age50_ratio', 'found_age_3', 'const']\n",
      "['age50_ratio', 'found_age_4', 'const']\n",
      "['age50_ratio', 'found_age_5', 'const']\n",
      "['age50_ratio', 'indcd_a_yn', 'const']\n",
      "['age50_ratio', 'indcd_b_yn', 'const']\n",
      "['age50_ratio', 'indcd_c_yn', 'const']\n",
      "['age50_ratio', 'indcd_d_yn', 'const']\n",
      "['age50_ratio', 'indcd_e_yn', 'const']\n",
      "['age50_ratio', 'indcd_f_yn', 'const']\n",
      "['age50_ratio', 'indcd_g_yn', 'const']\n",
      "['age50_ratio', 'indcd_h_yn', 'const']\n",
      "['age50_ratio', 'indcd_i_yn', 'const']\n",
      "['age50_ratio', 'indcd_j_yn', 'const']\n",
      "['age50_ratio', 'indcd_k_yn', 'const']\n",
      "['age50_ratio', 'indcd_l_yn', 'const']\n",
      "['age50_ratio', 'indcd_m_yn', 'const']\n",
      "['age50_ratio', 'indcd_n_yn', 'const']\n",
      "['age50_ratio', 'indcd_o_yn', 'const']\n",
      "['age50_ratio', 'indcd_p_yn', 'const']\n",
      "['age50_ratio', 'indcd_q_yn', 'const']\n",
      "['age50_ratio', 'indcd_r_yn', 'const']\n",
      "['age50_ratio', 'indcd_s_yn', 'const']\n",
      "['age50_ratio', 'indcd_t_yn', 'const']\n",
      "['age50_ratio', 'indcd_u_yn', 'const']\n",
      "['age50_ratio', 'rpr_per_age_bin_10', 'const']\n",
      "['age50_ratio', 'rpr_per_age_bin_20', 'const']\n",
      "['age50_ratio', 'rpr_per_age_bin_30to50', 'const']\n",
      "['age50_ratio', 'rpr_per_age_bin_50over', 'const']\n",
      "['age50_ratio', 'rpr_per_gender_f', 'const']\n",
      "['age50_ratio', 'rpr_per_gender_m', 'const']\n",
      "['age50_ratio', 'runout_cnt', 'const']\n",
      "['age50_ratio', 'sales_est_amt_201703', 'const']\n",
      "['age50_ratio', 'sales_est_amt_201706', 'const']\n",
      "['age50_ratio', 'sales_est_amt_201709', 'const']\n",
      "['age50_ratio', 'sales_est_amt_201712', 'const']\n",
      "['age50_ratio', 'sales_est_amt_201803', 'const']\n",
      "['age50_ratio', 'sales_est_amt_201806', 'const']\n",
      "['age50_ratio', 'sales_est_amt_201809', 'const']\n",
      "['age50_ratio', 'sales_est_amt_201812', 'const']\n",
      "['age50_ratio', 'sales_est_amt_201903', 'const']\n",
      "['age50_ratio', 'sales_est_amt_201906', 'const']\n",
      "['age50_ratio', 'sales_est_amt_201909', 'const']\n",
      "['age50_ratio', 'sales_est_amt_201912', 'const']\n",
      "['age50_ratio', 'sales_est_amt_202003', 'const']\n",
      "['age50_ratio', 'sales_est_amt_202006', 'const']\n",
      "['age50_ratio', 'sales_est_amt_202009', 'const']\n",
      "['age50_ratio', 'smbiz_yn_cnt', 'const']\n",
      "['age50_ratio', 'sme_loan_cnt', 'const']\n",
      "['age50_ratio', 'sme_loan_y_1', 'const']\n",
      "['age50_ratio', 'sme_loan_y_2', 'const']\n",
      "['age50_ratio', 'sme_loan_y_3', 'const']\n",
      "['age50_ratio', 'sme_loan_y_4', 'const']\n",
      "['age50_ratio', 'sme_loan_y_5', 'const']\n",
      "['age50_ratio', 'sme_loan_y_6', 'const']\n",
      "['age50_ratio', 'ws_cnt', 'const']\n",
      "['age60_ratio', 'age70_ratio', 'const']\n",
      "['age60_ratio', 'found_age_1', 'const']\n",
      "['age60_ratio', 'found_age_2', 'const']\n",
      "['age60_ratio', 'found_age_3', 'const']\n",
      "['age60_ratio', 'found_age_4', 'const']\n",
      "['age60_ratio', 'found_age_5', 'const']\n",
      "['age60_ratio', 'indcd_a_yn', 'const']\n",
      "['age60_ratio', 'indcd_b_yn', 'const']\n",
      "['age60_ratio', 'indcd_c_yn', 'const']\n",
      "['age60_ratio', 'indcd_d_yn', 'const']\n",
      "['age60_ratio', 'indcd_e_yn', 'const']\n",
      "['age60_ratio', 'indcd_f_yn', 'const']\n",
      "['age60_ratio', 'indcd_g_yn', 'const']\n",
      "['age60_ratio', 'indcd_h_yn', 'const']\n",
      "['age60_ratio', 'indcd_i_yn', 'const']\n",
      "['age60_ratio', 'indcd_j_yn', 'const']\n",
      "['age60_ratio', 'indcd_k_yn', 'const']\n",
      "['age60_ratio', 'indcd_l_yn', 'const']\n",
      "['age60_ratio', 'indcd_m_yn', 'const']\n",
      "['age60_ratio', 'indcd_n_yn', 'const']\n",
      "['age60_ratio', 'indcd_o_yn', 'const']\n",
      "['age60_ratio', 'indcd_p_yn', 'const']\n",
      "['age60_ratio', 'indcd_q_yn', 'const']\n",
      "['age60_ratio', 'indcd_r_yn', 'const']\n",
      "['age60_ratio', 'indcd_s_yn', 'const']\n",
      "['age60_ratio', 'indcd_t_yn', 'const']\n",
      "['age60_ratio', 'indcd_u_yn', 'const']\n",
      "['age60_ratio', 'rpr_per_age_bin_10', 'const']\n",
      "['age60_ratio', 'rpr_per_age_bin_20', 'const']\n",
      "['age60_ratio', 'rpr_per_age_bin_30to50', 'const']\n",
      "['age60_ratio', 'rpr_per_age_bin_50over', 'const']\n",
      "['age60_ratio', 'rpr_per_gender_f', 'const']\n",
      "['age60_ratio', 'rpr_per_gender_m', 'const']\n",
      "['age60_ratio', 'runout_cnt', 'const']\n",
      "['age60_ratio', 'sales_est_amt_201703', 'const']\n",
      "['age60_ratio', 'sales_est_amt_201706', 'const']\n",
      "['age60_ratio', 'sales_est_amt_201709', 'const']\n",
      "['age60_ratio', 'sales_est_amt_201712', 'const']\n",
      "['age60_ratio', 'sales_est_amt_201803', 'const']\n",
      "['age60_ratio', 'sales_est_amt_201806', 'const']\n",
      "['age60_ratio', 'sales_est_amt_201809', 'const']\n",
      "['age60_ratio', 'sales_est_amt_201812', 'const']\n",
      "['age60_ratio', 'sales_est_amt_201903', 'const']\n",
      "['age60_ratio', 'sales_est_amt_201906', 'const']\n",
      "['age60_ratio', 'sales_est_amt_201909', 'const']\n",
      "['age60_ratio', 'sales_est_amt_201912', 'const']\n",
      "['age60_ratio', 'sales_est_amt_202003', 'const']\n",
      "['age60_ratio', 'sales_est_amt_202006', 'const']\n",
      "['age60_ratio', 'sales_est_amt_202009', 'const']\n",
      "['age60_ratio', 'smbiz_yn_cnt', 'const']\n",
      "['age60_ratio', 'sme_loan_cnt', 'const']\n",
      "['age60_ratio', 'sme_loan_y_1', 'const']\n",
      "['age60_ratio', 'sme_loan_y_2', 'const']\n",
      "['age60_ratio', 'sme_loan_y_3', 'const']\n",
      "['age60_ratio', 'sme_loan_y_4', 'const']\n",
      "['age60_ratio', 'sme_loan_y_5', 'const']\n",
      "['age60_ratio', 'sme_loan_y_6', 'const']\n",
      "['age60_ratio', 'ws_cnt', 'const']\n",
      "['age70_ratio', 'found_age_1', 'const']\n",
      "['age70_ratio', 'found_age_2', 'const']\n",
      "['age70_ratio', 'found_age_3', 'const']\n",
      "['age70_ratio', 'found_age_4', 'const']\n",
      "['age70_ratio', 'found_age_5', 'const']\n",
      "['age70_ratio', 'indcd_a_yn', 'const']\n",
      "['age70_ratio', 'indcd_b_yn', 'const']\n",
      "['age70_ratio', 'indcd_c_yn', 'const']\n",
      "['age70_ratio', 'indcd_d_yn', 'const']\n",
      "['age70_ratio', 'indcd_e_yn', 'const']\n",
      "['age70_ratio', 'indcd_f_yn', 'const']\n",
      "['age70_ratio', 'indcd_g_yn', 'const']\n",
      "['age70_ratio', 'indcd_h_yn', 'const']\n",
      "['age70_ratio', 'indcd_i_yn', 'const']\n",
      "['age70_ratio', 'indcd_j_yn', 'const']\n",
      "['age70_ratio', 'indcd_k_yn', 'const']\n",
      "['age70_ratio', 'indcd_l_yn', 'const']\n",
      "['age70_ratio', 'indcd_m_yn', 'const']\n",
      "['age70_ratio', 'indcd_n_yn', 'const']\n",
      "['age70_ratio', 'indcd_o_yn', 'const']\n",
      "['age70_ratio', 'indcd_p_yn', 'const']\n",
      "['age70_ratio', 'indcd_q_yn', 'const']\n",
      "['age70_ratio', 'indcd_r_yn', 'const']\n",
      "['age70_ratio', 'indcd_s_yn', 'const']\n",
      "['age70_ratio', 'indcd_t_yn', 'const']\n",
      "['age70_ratio', 'indcd_u_yn', 'const']\n",
      "['age70_ratio', 'rpr_per_age_bin_10', 'const']\n",
      "['age70_ratio', 'rpr_per_age_bin_20', 'const']\n",
      "['age70_ratio', 'rpr_per_age_bin_30to50', 'const']\n",
      "['age70_ratio', 'rpr_per_age_bin_50over', 'const']\n",
      "['age70_ratio', 'rpr_per_gender_f', 'const']\n",
      "['age70_ratio', 'rpr_per_gender_m', 'const']\n",
      "['age70_ratio', 'runout_cnt', 'const']\n",
      "['age70_ratio', 'sales_est_amt_201703', 'const']\n",
      "['age70_ratio', 'sales_est_amt_201706', 'const']\n",
      "['age70_ratio', 'sales_est_amt_201709', 'const']\n",
      "['age70_ratio', 'sales_est_amt_201712', 'const']\n",
      "['age70_ratio', 'sales_est_amt_201803', 'const']\n",
      "['age70_ratio', 'sales_est_amt_201806', 'const']\n",
      "['age70_ratio', 'sales_est_amt_201809', 'const']\n",
      "['age70_ratio', 'sales_est_amt_201812', 'const']\n",
      "['age70_ratio', 'sales_est_amt_201903', 'const']\n",
      "['age70_ratio', 'sales_est_amt_201906', 'const']\n",
      "['age70_ratio', 'sales_est_amt_201909', 'const']\n",
      "['age70_ratio', 'sales_est_amt_201912', 'const']\n",
      "['age70_ratio', 'sales_est_amt_202003', 'const']\n",
      "['age70_ratio', 'sales_est_amt_202006', 'const']\n",
      "['age70_ratio', 'sales_est_amt_202009', 'const']\n",
      "['age70_ratio', 'smbiz_yn_cnt', 'const']\n",
      "['age70_ratio', 'sme_loan_cnt', 'const']\n",
      "['age70_ratio', 'sme_loan_y_1', 'const']\n",
      "['age70_ratio', 'sme_loan_y_2', 'const']\n",
      "['age70_ratio', 'sme_loan_y_3', 'const']\n",
      "['age70_ratio', 'sme_loan_y_4', 'const']\n",
      "['age70_ratio', 'sme_loan_y_5', 'const']\n",
      "['age70_ratio', 'sme_loan_y_6', 'const']\n",
      "['age70_ratio', 'ws_cnt', 'const']\n",
      "['found_age_1', 'found_age_2', 'const']\n",
      "['found_age_1', 'found_age_3', 'const']\n",
      "['found_age_1', 'found_age_4', 'const']\n",
      "['found_age_1', 'found_age_5', 'const']\n",
      "['found_age_1', 'indcd_a_yn', 'const']\n",
      "['found_age_1', 'indcd_b_yn', 'const']\n",
      "['found_age_1', 'indcd_c_yn', 'const']\n",
      "['found_age_1', 'indcd_d_yn', 'const']\n",
      "['found_age_1', 'indcd_e_yn', 'const']\n",
      "['found_age_1', 'indcd_f_yn', 'const']\n",
      "['found_age_1', 'indcd_g_yn', 'const']\n",
      "['found_age_1', 'indcd_h_yn', 'const']\n",
      "['found_age_1', 'indcd_i_yn', 'const']\n",
      "['found_age_1', 'indcd_j_yn', 'const']\n",
      "['found_age_1', 'indcd_k_yn', 'const']\n",
      "['found_age_1', 'indcd_l_yn', 'const']\n",
      "['found_age_1', 'indcd_m_yn', 'const']\n",
      "['found_age_1', 'indcd_n_yn', 'const']\n",
      "['found_age_1', 'indcd_o_yn', 'const']\n",
      "['found_age_1', 'indcd_p_yn', 'const']\n",
      "['found_age_1', 'indcd_q_yn', 'const']\n",
      "['found_age_1', 'indcd_r_yn', 'const']\n",
      "['found_age_1', 'indcd_s_yn', 'const']\n",
      "['found_age_1', 'indcd_t_yn', 'const']\n",
      "['found_age_1', 'indcd_u_yn', 'const']\n",
      "['found_age_1', 'rpr_per_age_bin_10', 'const']\n",
      "['found_age_1', 'rpr_per_age_bin_20', 'const']\n",
      "['found_age_1', 'rpr_per_age_bin_30to50', 'const']\n",
      "['found_age_1', 'rpr_per_age_bin_50over', 'const']\n",
      "['found_age_1', 'rpr_per_gender_f', 'const']\n",
      "['found_age_1', 'rpr_per_gender_m', 'const']\n",
      "['found_age_1', 'runout_cnt', 'const']\n",
      "['found_age_1', 'sales_est_amt_201703', 'const']\n",
      "['found_age_1', 'sales_est_amt_201706', 'const']\n",
      "['found_age_1', 'sales_est_amt_201709', 'const']\n",
      "['found_age_1', 'sales_est_amt_201712', 'const']\n",
      "['found_age_1', 'sales_est_amt_201803', 'const']\n",
      "['found_age_1', 'sales_est_amt_201806', 'const']\n",
      "['found_age_1', 'sales_est_amt_201809', 'const']\n",
      "['found_age_1', 'sales_est_amt_201812', 'const']\n",
      "['found_age_1', 'sales_est_amt_201903', 'const']\n",
      "['found_age_1', 'sales_est_amt_201906', 'const']\n",
      "['found_age_1', 'sales_est_amt_201909', 'const']\n",
      "['found_age_1', 'sales_est_amt_201912', 'const']\n",
      "['found_age_1', 'sales_est_amt_202003', 'const']\n",
      "['found_age_1', 'sales_est_amt_202006', 'const']\n",
      "['found_age_1', 'sales_est_amt_202009', 'const']\n",
      "['found_age_1', 'smbiz_yn_cnt', 'const']\n",
      "['found_age_1', 'sme_loan_cnt', 'const']\n",
      "['found_age_1', 'sme_loan_y_1', 'const']\n",
      "['found_age_1', 'sme_loan_y_2', 'const']\n",
      "['found_age_1', 'sme_loan_y_3', 'const']\n",
      "['found_age_1', 'sme_loan_y_4', 'const']\n",
      "['found_age_1', 'sme_loan_y_5', 'const']\n",
      "['found_age_1', 'sme_loan_y_6', 'const']\n",
      "['found_age_1', 'ws_cnt', 'const']\n",
      "['found_age_2', 'found_age_3', 'const']\n",
      "['found_age_2', 'found_age_4', 'const']\n",
      "['found_age_2', 'found_age_5', 'const']\n",
      "['found_age_2', 'indcd_a_yn', 'const']\n",
      "['found_age_2', 'indcd_b_yn', 'const']\n",
      "['found_age_2', 'indcd_c_yn', 'const']\n",
      "['found_age_2', 'indcd_d_yn', 'const']\n",
      "['found_age_2', 'indcd_e_yn', 'const']\n",
      "['found_age_2', 'indcd_f_yn', 'const']\n",
      "['found_age_2', 'indcd_g_yn', 'const']\n",
      "['found_age_2', 'indcd_h_yn', 'const']\n",
      "['found_age_2', 'indcd_i_yn', 'const']\n",
      "['found_age_2', 'indcd_j_yn', 'const']\n",
      "['found_age_2', 'indcd_k_yn', 'const']\n",
      "['found_age_2', 'indcd_l_yn', 'const']\n",
      "['found_age_2', 'indcd_m_yn', 'const']\n",
      "['found_age_2', 'indcd_n_yn', 'const']\n",
      "['found_age_2', 'indcd_o_yn', 'const']\n",
      "['found_age_2', 'indcd_p_yn', 'const']\n",
      "['found_age_2', 'indcd_q_yn', 'const']\n",
      "['found_age_2', 'indcd_r_yn', 'const']\n",
      "['found_age_2', 'indcd_s_yn', 'const']\n",
      "['found_age_2', 'indcd_t_yn', 'const']\n",
      "['found_age_2', 'indcd_u_yn', 'const']\n",
      "['found_age_2', 'rpr_per_age_bin_10', 'const']\n",
      "['found_age_2', 'rpr_per_age_bin_20', 'const']\n",
      "['found_age_2', 'rpr_per_age_bin_30to50', 'const']\n",
      "['found_age_2', 'rpr_per_age_bin_50over', 'const']\n",
      "['found_age_2', 'rpr_per_gender_f', 'const']\n",
      "['found_age_2', 'rpr_per_gender_m', 'const']\n",
      "['found_age_2', 'runout_cnt', 'const']\n",
      "['found_age_2', 'sales_est_amt_201703', 'const']\n",
      "['found_age_2', 'sales_est_amt_201706', 'const']\n",
      "['found_age_2', 'sales_est_amt_201709', 'const']\n",
      "['found_age_2', 'sales_est_amt_201712', 'const']\n",
      "['found_age_2', 'sales_est_amt_201803', 'const']\n",
      "['found_age_2', 'sales_est_amt_201806', 'const']\n",
      "['found_age_2', 'sales_est_amt_201809', 'const']\n",
      "['found_age_2', 'sales_est_amt_201812', 'const']\n",
      "['found_age_2', 'sales_est_amt_201903', 'const']\n",
      "['found_age_2', 'sales_est_amt_201906', 'const']\n",
      "['found_age_2', 'sales_est_amt_201909', 'const']\n",
      "['found_age_2', 'sales_est_amt_201912', 'const']\n",
      "['found_age_2', 'sales_est_amt_202003', 'const']\n",
      "['found_age_2', 'sales_est_amt_202006', 'const']\n",
      "['found_age_2', 'sales_est_amt_202009', 'const']\n",
      "['found_age_2', 'smbiz_yn_cnt', 'const']\n",
      "['found_age_2', 'sme_loan_cnt', 'const']\n",
      "['found_age_2', 'sme_loan_y_1', 'const']\n",
      "['found_age_2', 'sme_loan_y_2', 'const']\n",
      "['found_age_2', 'sme_loan_y_3', 'const']\n",
      "['found_age_2', 'sme_loan_y_4', 'const']\n",
      "['found_age_2', 'sme_loan_y_5', 'const']\n",
      "['found_age_2', 'sme_loan_y_6', 'const']\n",
      "['found_age_2', 'ws_cnt', 'const']\n",
      "['found_age_3', 'found_age_4', 'const']\n",
      "['found_age_3', 'found_age_5', 'const']\n",
      "['found_age_3', 'indcd_a_yn', 'const']\n",
      "['found_age_3', 'indcd_b_yn', 'const']\n",
      "['found_age_3', 'indcd_c_yn', 'const']\n",
      "['found_age_3', 'indcd_d_yn', 'const']\n",
      "['found_age_3', 'indcd_e_yn', 'const']\n",
      "['found_age_3', 'indcd_f_yn', 'const']\n",
      "['found_age_3', 'indcd_g_yn', 'const']\n",
      "['found_age_3', 'indcd_h_yn', 'const']\n",
      "['found_age_3', 'indcd_i_yn', 'const']\n",
      "['found_age_3', 'indcd_j_yn', 'const']\n",
      "['found_age_3', 'indcd_k_yn', 'const']\n",
      "['found_age_3', 'indcd_l_yn', 'const']\n",
      "['found_age_3', 'indcd_m_yn', 'const']\n",
      "['found_age_3', 'indcd_n_yn', 'const']\n",
      "['found_age_3', 'indcd_o_yn', 'const']\n",
      "['found_age_3', 'indcd_p_yn', 'const']\n",
      "['found_age_3', 'indcd_q_yn', 'const']\n",
      "['found_age_3', 'indcd_r_yn', 'const']\n",
      "['found_age_3', 'indcd_s_yn', 'const']\n",
      "['found_age_3', 'indcd_t_yn', 'const']\n",
      "['found_age_3', 'indcd_u_yn', 'const']\n",
      "['found_age_3', 'rpr_per_age_bin_10', 'const']\n",
      "['found_age_3', 'rpr_per_age_bin_20', 'const']\n",
      "['found_age_3', 'rpr_per_age_bin_30to50', 'const']\n",
      "['found_age_3', 'rpr_per_age_bin_50over', 'const']\n",
      "['found_age_3', 'rpr_per_gender_f', 'const']\n",
      "['found_age_3', 'rpr_per_gender_m', 'const']\n",
      "['found_age_3', 'runout_cnt', 'const']\n",
      "['found_age_3', 'sales_est_amt_201703', 'const']\n",
      "['found_age_3', 'sales_est_amt_201706', 'const']\n",
      "['found_age_3', 'sales_est_amt_201709', 'const']\n",
      "['found_age_3', 'sales_est_amt_201712', 'const']\n",
      "['found_age_3', 'sales_est_amt_201803', 'const']\n",
      "['found_age_3', 'sales_est_amt_201806', 'const']\n",
      "['found_age_3', 'sales_est_amt_201809', 'const']\n",
      "['found_age_3', 'sales_est_amt_201812', 'const']\n",
      "['found_age_3', 'sales_est_amt_201903', 'const']\n",
      "['found_age_3', 'sales_est_amt_201906', 'const']\n",
      "['found_age_3', 'sales_est_amt_201909', 'const']\n",
      "['found_age_3', 'sales_est_amt_201912', 'const']\n",
      "['found_age_3', 'sales_est_amt_202003', 'const']\n",
      "['found_age_3', 'sales_est_amt_202006', 'const']\n",
      "['found_age_3', 'sales_est_amt_202009', 'const']\n",
      "['found_age_3', 'smbiz_yn_cnt', 'const']\n",
      "['found_age_3', 'sme_loan_cnt', 'const']\n",
      "['found_age_3', 'sme_loan_y_1', 'const']\n",
      "['found_age_3', 'sme_loan_y_2', 'const']\n",
      "['found_age_3', 'sme_loan_y_3', 'const']\n",
      "['found_age_3', 'sme_loan_y_4', 'const']\n",
      "['found_age_3', 'sme_loan_y_5', 'const']\n",
      "['found_age_3', 'sme_loan_y_6', 'const']\n",
      "['found_age_3', 'ws_cnt', 'const']\n",
      "['found_age_4', 'found_age_5', 'const']\n",
      "['found_age_4', 'indcd_a_yn', 'const']\n",
      "['found_age_4', 'indcd_b_yn', 'const']\n",
      "['found_age_4', 'indcd_c_yn', 'const']\n",
      "['found_age_4', 'indcd_d_yn', 'const']\n",
      "['found_age_4', 'indcd_e_yn', 'const']\n",
      "['found_age_4', 'indcd_f_yn', 'const']\n",
      "['found_age_4', 'indcd_g_yn', 'const']\n",
      "['found_age_4', 'indcd_h_yn', 'const']\n",
      "['found_age_4', 'indcd_i_yn', 'const']\n",
      "['found_age_4', 'indcd_j_yn', 'const']\n",
      "['found_age_4', 'indcd_k_yn', 'const']\n",
      "['found_age_4', 'indcd_l_yn', 'const']\n",
      "['found_age_4', 'indcd_m_yn', 'const']\n",
      "['found_age_4', 'indcd_n_yn', 'const']\n",
      "['found_age_4', 'indcd_o_yn', 'const']\n",
      "['found_age_4', 'indcd_p_yn', 'const']\n",
      "['found_age_4', 'indcd_q_yn', 'const']\n",
      "['found_age_4', 'indcd_r_yn', 'const']\n",
      "['found_age_4', 'indcd_s_yn', 'const']\n",
      "['found_age_4', 'indcd_t_yn', 'const']\n",
      "['found_age_4', 'indcd_u_yn', 'const']\n",
      "['found_age_4', 'rpr_per_age_bin_10', 'const']\n",
      "['found_age_4', 'rpr_per_age_bin_20', 'const']\n",
      "['found_age_4', 'rpr_per_age_bin_30to50', 'const']\n",
      "['found_age_4', 'rpr_per_age_bin_50over', 'const']\n",
      "['found_age_4', 'rpr_per_gender_f', 'const']\n",
      "['found_age_4', 'rpr_per_gender_m', 'const']\n",
      "['found_age_4', 'runout_cnt', 'const']\n",
      "['found_age_4', 'sales_est_amt_201703', 'const']\n",
      "['found_age_4', 'sales_est_amt_201706', 'const']\n",
      "['found_age_4', 'sales_est_amt_201709', 'const']\n",
      "['found_age_4', 'sales_est_amt_201712', 'const']\n",
      "['found_age_4', 'sales_est_amt_201803', 'const']\n",
      "['found_age_4', 'sales_est_amt_201806', 'const']\n",
      "['found_age_4', 'sales_est_amt_201809', 'const']\n",
      "['found_age_4', 'sales_est_amt_201812', 'const']\n",
      "['found_age_4', 'sales_est_amt_201903', 'const']\n",
      "['found_age_4', 'sales_est_amt_201906', 'const']\n",
      "['found_age_4', 'sales_est_amt_201909', 'const']\n",
      "['found_age_4', 'sales_est_amt_201912', 'const']\n",
      "['found_age_4', 'sales_est_amt_202003', 'const']\n",
      "['found_age_4', 'sales_est_amt_202006', 'const']\n",
      "['found_age_4', 'sales_est_amt_202009', 'const']\n",
      "['found_age_4', 'smbiz_yn_cnt', 'const']\n",
      "['found_age_4', 'sme_loan_cnt', 'const']\n",
      "['found_age_4', 'sme_loan_y_1', 'const']\n",
      "['found_age_4', 'sme_loan_y_2', 'const']\n",
      "['found_age_4', 'sme_loan_y_3', 'const']\n",
      "['found_age_4', 'sme_loan_y_4', 'const']\n",
      "['found_age_4', 'sme_loan_y_5', 'const']\n",
      "['found_age_4', 'sme_loan_y_6', 'const']\n",
      "['found_age_4', 'ws_cnt', 'const']\n",
      "['found_age_5', 'indcd_a_yn', 'const']\n",
      "['found_age_5', 'indcd_b_yn', 'const']\n",
      "['found_age_5', 'indcd_c_yn', 'const']\n",
      "['found_age_5', 'indcd_d_yn', 'const']\n",
      "['found_age_5', 'indcd_e_yn', 'const']\n",
      "['found_age_5', 'indcd_f_yn', 'const']\n",
      "['found_age_5', 'indcd_g_yn', 'const']\n",
      "['found_age_5', 'indcd_h_yn', 'const']\n",
      "['found_age_5', 'indcd_i_yn', 'const']\n",
      "['found_age_5', 'indcd_j_yn', 'const']\n",
      "['found_age_5', 'indcd_k_yn', 'const']\n",
      "['found_age_5', 'indcd_l_yn', 'const']\n",
      "['found_age_5', 'indcd_m_yn', 'const']\n",
      "['found_age_5', 'indcd_n_yn', 'const']\n",
      "['found_age_5', 'indcd_o_yn', 'const']\n",
      "['found_age_5', 'indcd_p_yn', 'const']\n",
      "['found_age_5', 'indcd_q_yn', 'const']\n",
      "['found_age_5', 'indcd_r_yn', 'const']\n",
      "['found_age_5', 'indcd_s_yn', 'const']\n",
      "['found_age_5', 'indcd_t_yn', 'const']\n",
      "['found_age_5', 'indcd_u_yn', 'const']\n",
      "['found_age_5', 'rpr_per_age_bin_10', 'const']\n",
      "['found_age_5', 'rpr_per_age_bin_20', 'const']\n",
      "['found_age_5', 'rpr_per_age_bin_30to50', 'const']\n",
      "['found_age_5', 'rpr_per_age_bin_50over', 'const']\n",
      "['found_age_5', 'rpr_per_gender_f', 'const']\n",
      "['found_age_5', 'rpr_per_gender_m', 'const']\n",
      "['found_age_5', 'runout_cnt', 'const']\n",
      "['found_age_5', 'sales_est_amt_201703', 'const']\n",
      "['found_age_5', 'sales_est_amt_201706', 'const']\n",
      "['found_age_5', 'sales_est_amt_201709', 'const']\n",
      "['found_age_5', 'sales_est_amt_201712', 'const']\n",
      "['found_age_5', 'sales_est_amt_201803', 'const']\n",
      "['found_age_5', 'sales_est_amt_201806', 'const']\n",
      "['found_age_5', 'sales_est_amt_201809', 'const']\n",
      "['found_age_5', 'sales_est_amt_201812', 'const']\n",
      "['found_age_5', 'sales_est_amt_201903', 'const']\n",
      "['found_age_5', 'sales_est_amt_201906', 'const']\n",
      "['found_age_5', 'sales_est_amt_201909', 'const']\n",
      "['found_age_5', 'sales_est_amt_201912', 'const']\n",
      "['found_age_5', 'sales_est_amt_202003', 'const']\n",
      "['found_age_5', 'sales_est_amt_202006', 'const']\n",
      "['found_age_5', 'sales_est_amt_202009', 'const']\n",
      "['found_age_5', 'smbiz_yn_cnt', 'const']\n",
      "['found_age_5', 'sme_loan_cnt', 'const']\n",
      "['found_age_5', 'sme_loan_y_1', 'const']\n",
      "['found_age_5', 'sme_loan_y_2', 'const']\n",
      "['found_age_5', 'sme_loan_y_3', 'const']\n",
      "['found_age_5', 'sme_loan_y_4', 'const']\n",
      "['found_age_5', 'sme_loan_y_5', 'const']\n",
      "['found_age_5', 'sme_loan_y_6', 'const']\n",
      "['found_age_5', 'ws_cnt', 'const']\n",
      "['indcd_a_yn', 'indcd_b_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_c_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_d_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_e_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_f_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_g_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_h_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_i_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_j_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_k_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_l_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_m_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_a_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_a_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_a_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_a_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_a_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_a_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_a_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_a_yn', 'runout_cnt', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_a_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_a_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_a_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_a_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_a_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_a_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_a_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_a_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_a_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_a_yn', 'ws_cnt', 'const']\n",
      "['indcd_b_yn', 'indcd_c_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_d_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_e_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_f_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_g_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_h_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_i_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_j_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_k_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_l_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_m_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_b_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_b_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_b_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_b_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_b_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_b_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_b_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_b_yn', 'runout_cnt', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_b_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_b_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_b_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_b_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_b_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_b_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_b_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_b_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_b_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_b_yn', 'ws_cnt', 'const']\n",
      "['indcd_c_yn', 'indcd_d_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_e_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_f_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_g_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_h_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_i_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_j_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_k_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_l_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_m_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_c_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_c_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_c_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_c_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_c_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_c_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_c_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_c_yn', 'runout_cnt', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_c_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_c_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_c_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_c_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_c_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_c_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_c_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_c_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_c_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_c_yn', 'ws_cnt', 'const']\n",
      "['indcd_d_yn', 'indcd_e_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_f_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_g_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_h_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_i_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_j_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_k_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_l_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_m_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_d_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_d_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_d_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_d_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_d_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_d_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_d_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_d_yn', 'runout_cnt', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_d_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_d_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_d_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_d_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_d_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_d_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_d_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_d_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_d_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_d_yn', 'ws_cnt', 'const']\n",
      "['indcd_e_yn', 'indcd_f_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_g_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_h_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_i_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_j_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_k_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_l_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_m_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_e_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_e_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_e_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_e_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_e_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_e_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_e_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_e_yn', 'runout_cnt', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_e_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_e_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_e_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_e_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_e_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_e_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_e_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_e_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_e_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_e_yn', 'ws_cnt', 'const']\n",
      "['indcd_f_yn', 'indcd_g_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_h_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_i_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_j_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_k_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_l_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_m_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_f_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_f_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_f_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_f_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_f_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_f_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_f_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_f_yn', 'runout_cnt', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_f_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_f_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_f_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_f_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_f_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_f_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_f_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_f_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_f_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_f_yn', 'ws_cnt', 'const']\n",
      "['indcd_g_yn', 'indcd_h_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_i_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_j_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_k_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_l_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_m_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_g_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_g_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_g_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_g_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_g_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_g_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_g_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_g_yn', 'runout_cnt', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_g_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_g_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_g_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_g_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_g_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_g_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_g_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_g_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_g_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_g_yn', 'ws_cnt', 'const']\n",
      "['indcd_h_yn', 'indcd_i_yn', 'const']\n",
      "['indcd_h_yn', 'indcd_j_yn', 'const']\n",
      "['indcd_h_yn', 'indcd_k_yn', 'const']\n",
      "['indcd_h_yn', 'indcd_l_yn', 'const']\n",
      "['indcd_h_yn', 'indcd_m_yn', 'const']\n",
      "['indcd_h_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_h_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_h_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_h_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_h_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_h_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_h_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_h_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_h_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_h_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_h_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_h_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_h_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_h_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_h_yn', 'runout_cnt', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_h_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_h_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_h_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_h_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_h_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_h_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_h_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_h_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_h_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_h_yn', 'ws_cnt', 'const']\n",
      "['indcd_i_yn', 'indcd_j_yn', 'const']\n",
      "['indcd_i_yn', 'indcd_k_yn', 'const']\n",
      "['indcd_i_yn', 'indcd_l_yn', 'const']\n",
      "['indcd_i_yn', 'indcd_m_yn', 'const']\n",
      "['indcd_i_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_i_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_i_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_i_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_i_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_i_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_i_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_i_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_i_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_i_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_i_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_i_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_i_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_i_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_i_yn', 'runout_cnt', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_i_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_i_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_i_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_i_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_i_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_i_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_i_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_i_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_i_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_i_yn', 'ws_cnt', 'const']\n",
      "['indcd_j_yn', 'indcd_k_yn', 'const']\n",
      "['indcd_j_yn', 'indcd_l_yn', 'const']\n",
      "['indcd_j_yn', 'indcd_m_yn', 'const']\n",
      "['indcd_j_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_j_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_j_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_j_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_j_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_j_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_j_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_j_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_j_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_j_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_j_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_j_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_j_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_j_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_j_yn', 'runout_cnt', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_j_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_j_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_j_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_j_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_j_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_j_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_j_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_j_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_j_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_j_yn', 'ws_cnt', 'const']\n",
      "['indcd_k_yn', 'indcd_l_yn', 'const']\n",
      "['indcd_k_yn', 'indcd_m_yn', 'const']\n",
      "['indcd_k_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_k_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_k_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_k_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_k_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_k_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_k_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_k_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_k_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_k_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_k_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_k_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_k_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_k_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_k_yn', 'runout_cnt', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_k_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_k_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_k_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_k_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_k_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_k_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_k_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_k_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_k_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_k_yn', 'ws_cnt', 'const']\n",
      "['indcd_l_yn', 'indcd_m_yn', 'const']\n",
      "['indcd_l_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_l_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_l_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_l_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_l_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_l_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_l_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_l_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_l_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_l_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_l_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_l_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_l_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_l_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_l_yn', 'runout_cnt', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_l_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_l_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_l_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_l_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_l_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_l_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_l_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_l_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_l_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_l_yn', 'ws_cnt', 'const']\n",
      "['indcd_m_yn', 'indcd_n_yn', 'const']\n",
      "['indcd_m_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_m_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_m_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_m_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_m_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_m_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_m_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_m_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_m_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_m_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_m_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_m_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_m_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_m_yn', 'runout_cnt', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_m_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_m_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_m_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_m_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_m_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_m_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_m_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_m_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_m_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_m_yn', 'ws_cnt', 'const']\n",
      "['indcd_n_yn', 'indcd_o_yn', 'const']\n",
      "['indcd_n_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_n_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_n_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_n_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_n_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_n_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_n_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_n_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_n_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_n_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_n_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_n_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_n_yn', 'runout_cnt', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_n_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_n_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_n_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_n_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_n_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_n_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_n_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_n_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_n_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_n_yn', 'ws_cnt', 'const']\n",
      "['indcd_o_yn', 'indcd_p_yn', 'const']\n",
      "['indcd_o_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_o_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_o_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_o_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_o_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_o_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_o_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_o_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_o_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_o_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_o_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_o_yn', 'runout_cnt', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_o_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_o_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_o_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_o_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_o_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_o_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_o_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_o_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_o_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_o_yn', 'ws_cnt', 'const']\n",
      "['indcd_p_yn', 'indcd_q_yn', 'const']\n",
      "['indcd_p_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_p_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_p_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_p_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_p_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_p_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_p_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_p_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_p_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_p_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_p_yn', 'runout_cnt', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_p_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_p_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_p_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_p_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_p_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_p_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_p_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_p_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_p_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_p_yn', 'ws_cnt', 'const']\n",
      "['indcd_q_yn', 'indcd_r_yn', 'const']\n",
      "['indcd_q_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_q_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_q_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_q_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_q_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_q_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_q_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_q_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_q_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_q_yn', 'runout_cnt', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_q_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_q_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_q_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_q_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_q_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_q_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_q_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_q_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_q_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_q_yn', 'ws_cnt', 'const']\n",
      "['indcd_r_yn', 'indcd_s_yn', 'const']\n",
      "['indcd_r_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_r_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_r_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_r_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_r_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_r_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_r_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_r_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_r_yn', 'runout_cnt', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_r_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_r_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_r_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_r_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_r_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_r_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_r_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_r_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_r_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_r_yn', 'ws_cnt', 'const']\n",
      "['indcd_s_yn', 'indcd_t_yn', 'const']\n",
      "['indcd_s_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_s_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_s_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_s_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_s_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_s_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_s_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_s_yn', 'runout_cnt', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_s_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_s_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_s_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_s_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_s_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_s_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_s_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_s_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_s_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_s_yn', 'ws_cnt', 'const']\n",
      "['indcd_t_yn', 'indcd_u_yn', 'const']\n",
      "['indcd_t_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_t_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_t_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_t_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_t_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_t_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_t_yn', 'runout_cnt', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_t_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_t_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_t_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_t_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_t_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_t_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_t_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_t_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_t_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_t_yn', 'ws_cnt', 'const']\n",
      "['indcd_u_yn', 'rpr_per_age_bin_10', 'const']\n",
      "['indcd_u_yn', 'rpr_per_age_bin_20', 'const']\n",
      "['indcd_u_yn', 'rpr_per_age_bin_30to50', 'const']\n",
      "['indcd_u_yn', 'rpr_per_age_bin_50over', 'const']\n",
      "['indcd_u_yn', 'rpr_per_gender_f', 'const']\n",
      "['indcd_u_yn', 'rpr_per_gender_m', 'const']\n",
      "['indcd_u_yn', 'runout_cnt', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_201703', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_201706', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_201709', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_201712', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_201803', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_201806', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_201809', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_201812', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_201903', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_201906', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_201909', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_201912', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_202003', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_202006', 'const']\n",
      "['indcd_u_yn', 'sales_est_amt_202009', 'const']\n",
      "['indcd_u_yn', 'smbiz_yn_cnt', 'const']\n",
      "['indcd_u_yn', 'sme_loan_cnt', 'const']\n",
      "['indcd_u_yn', 'sme_loan_y_1', 'const']\n",
      "['indcd_u_yn', 'sme_loan_y_2', 'const']\n",
      "['indcd_u_yn', 'sme_loan_y_3', 'const']\n",
      "['indcd_u_yn', 'sme_loan_y_4', 'const']\n",
      "['indcd_u_yn', 'sme_loan_y_5', 'const']\n",
      "['indcd_u_yn', 'sme_loan_y_6', 'const']\n",
      "['indcd_u_yn', 'ws_cnt', 'const']\n",
      "['rpr_per_age_bin_10', 'rpr_per_age_bin_20', 'const']\n",
      "['rpr_per_age_bin_10', 'rpr_per_age_bin_30to50', 'const']\n",
      "['rpr_per_age_bin_10', 'rpr_per_age_bin_50over', 'const']\n",
      "['rpr_per_age_bin_10', 'rpr_per_gender_f', 'const']\n",
      "['rpr_per_age_bin_10', 'rpr_per_gender_m', 'const']\n",
      "['rpr_per_age_bin_10', 'runout_cnt', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_201703', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_201706', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_201709', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_201712', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_201803', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_201806', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_201809', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_201812', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_201903', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_201906', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_201909', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_201912', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_202003', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_202006', 'const']\n",
      "['rpr_per_age_bin_10', 'sales_est_amt_202009', 'const']\n",
      "['rpr_per_age_bin_10', 'smbiz_yn_cnt', 'const']\n",
      "['rpr_per_age_bin_10', 'sme_loan_cnt', 'const']\n",
      "['rpr_per_age_bin_10', 'sme_loan_y_1', 'const']\n",
      "['rpr_per_age_bin_10', 'sme_loan_y_2', 'const']\n",
      "['rpr_per_age_bin_10', 'sme_loan_y_3', 'const']\n",
      "['rpr_per_age_bin_10', 'sme_loan_y_4', 'const']\n",
      "['rpr_per_age_bin_10', 'sme_loan_y_5', 'const']\n",
      "['rpr_per_age_bin_10', 'sme_loan_y_6', 'const']\n",
      "['rpr_per_age_bin_10', 'ws_cnt', 'const']\n",
      "['rpr_per_age_bin_20', 'rpr_per_age_bin_30to50', 'const']\n",
      "['rpr_per_age_bin_20', 'rpr_per_age_bin_50over', 'const']\n",
      "['rpr_per_age_bin_20', 'rpr_per_gender_f', 'const']\n",
      "['rpr_per_age_bin_20', 'rpr_per_gender_m', 'const']\n",
      "['rpr_per_age_bin_20', 'runout_cnt', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_201703', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_201706', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_201709', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_201712', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_201803', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_201806', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_201809', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_201812', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_201903', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_201906', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_201909', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_201912', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_202003', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_202006', 'const']\n",
      "['rpr_per_age_bin_20', 'sales_est_amt_202009', 'const']\n",
      "['rpr_per_age_bin_20', 'smbiz_yn_cnt', 'const']\n",
      "['rpr_per_age_bin_20', 'sme_loan_cnt', 'const']\n",
      "['rpr_per_age_bin_20', 'sme_loan_y_1', 'const']\n",
      "['rpr_per_age_bin_20', 'sme_loan_y_2', 'const']\n",
      "['rpr_per_age_bin_20', 'sme_loan_y_3', 'const']\n",
      "['rpr_per_age_bin_20', 'sme_loan_y_4', 'const']\n",
      "['rpr_per_age_bin_20', 'sme_loan_y_5', 'const']\n",
      "['rpr_per_age_bin_20', 'sme_loan_y_6', 'const']\n",
      "['rpr_per_age_bin_20', 'ws_cnt', 'const']\n",
      "['rpr_per_age_bin_30to50', 'rpr_per_age_bin_50over', 'const']\n",
      "['rpr_per_age_bin_30to50', 'rpr_per_gender_f', 'const']\n",
      "['rpr_per_age_bin_30to50', 'rpr_per_gender_m', 'const']\n",
      "['rpr_per_age_bin_30to50', 'runout_cnt', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_201703', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_201706', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_201709', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_201712', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_201803', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_201806', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_201809', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_201812', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_201903', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_201906', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_201909', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_201912', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_202003', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_202006', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sales_est_amt_202009', 'const']\n",
      "['rpr_per_age_bin_30to50', 'smbiz_yn_cnt', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sme_loan_cnt', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sme_loan_y_1', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sme_loan_y_2', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sme_loan_y_3', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sme_loan_y_4', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sme_loan_y_5', 'const']\n",
      "['rpr_per_age_bin_30to50', 'sme_loan_y_6', 'const']\n",
      "['rpr_per_age_bin_30to50', 'ws_cnt', 'const']\n",
      "['rpr_per_age_bin_50over', 'rpr_per_gender_f', 'const']\n",
      "['rpr_per_age_bin_50over', 'rpr_per_gender_m', 'const']\n",
      "['rpr_per_age_bin_50over', 'runout_cnt', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_201703', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_201706', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_201709', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_201712', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_201803', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_201806', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_201809', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_201812', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_201903', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_201906', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_201909', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_201912', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_202003', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_202006', 'const']\n",
      "['rpr_per_age_bin_50over', 'sales_est_amt_202009', 'const']\n",
      "['rpr_per_age_bin_50over', 'smbiz_yn_cnt', 'const']\n",
      "['rpr_per_age_bin_50over', 'sme_loan_cnt', 'const']\n",
      "['rpr_per_age_bin_50over', 'sme_loan_y_1', 'const']\n",
      "['rpr_per_age_bin_50over', 'sme_loan_y_2', 'const']\n",
      "['rpr_per_age_bin_50over', 'sme_loan_y_3', 'const']\n",
      "['rpr_per_age_bin_50over', 'sme_loan_y_4', 'const']\n",
      "['rpr_per_age_bin_50over', 'sme_loan_y_5', 'const']\n",
      "['rpr_per_age_bin_50over', 'sme_loan_y_6', 'const']\n",
      "['rpr_per_age_bin_50over', 'ws_cnt', 'const']\n",
      "['rpr_per_gender_f', 'rpr_per_gender_m', 'const']\n",
      "['rpr_per_gender_f', 'runout_cnt', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_201703', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_201706', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_201709', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_201712', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_201803', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_201806', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_201809', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_201812', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_201903', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_201906', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_201909', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_201912', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_202003', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_202006', 'const']\n",
      "['rpr_per_gender_f', 'sales_est_amt_202009', 'const']\n",
      "['rpr_per_gender_f', 'smbiz_yn_cnt', 'const']\n",
      "['rpr_per_gender_f', 'sme_loan_cnt', 'const']\n",
      "['rpr_per_gender_f', 'sme_loan_y_1', 'const']\n",
      "['rpr_per_gender_f', 'sme_loan_y_2', 'const']\n",
      "['rpr_per_gender_f', 'sme_loan_y_3', 'const']\n",
      "['rpr_per_gender_f', 'sme_loan_y_4', 'const']\n",
      "['rpr_per_gender_f', 'sme_loan_y_5', 'const']\n",
      "['rpr_per_gender_f', 'sme_loan_y_6', 'const']\n",
      "['rpr_per_gender_f', 'ws_cnt', 'const']\n",
      "['rpr_per_gender_m', 'runout_cnt', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_201703', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_201706', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_201709', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_201712', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_201803', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_201806', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_201809', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_201812', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_201903', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_201906', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_201909', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_201912', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_202003', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_202006', 'const']\n",
      "['rpr_per_gender_m', 'sales_est_amt_202009', 'const']\n",
      "['rpr_per_gender_m', 'smbiz_yn_cnt', 'const']\n",
      "['rpr_per_gender_m', 'sme_loan_cnt', 'const']\n",
      "['rpr_per_gender_m', 'sme_loan_y_1', 'const']\n",
      "['rpr_per_gender_m', 'sme_loan_y_2', 'const']\n",
      "['rpr_per_gender_m', 'sme_loan_y_3', 'const']\n",
      "['rpr_per_gender_m', 'sme_loan_y_4', 'const']\n",
      "['rpr_per_gender_m', 'sme_loan_y_5', 'const']\n",
      "['rpr_per_gender_m', 'sme_loan_y_6', 'const']\n",
      "['rpr_per_gender_m', 'ws_cnt', 'const']\n",
      "['runout_cnt', 'sales_est_amt_201703', 'const']\n",
      "['runout_cnt', 'sales_est_amt_201706', 'const']\n",
      "['runout_cnt', 'sales_est_amt_201709', 'const']\n",
      "['runout_cnt', 'sales_est_amt_201712', 'const']\n",
      "['runout_cnt', 'sales_est_amt_201803', 'const']\n",
      "['runout_cnt', 'sales_est_amt_201806', 'const']\n",
      "['runout_cnt', 'sales_est_amt_201809', 'const']\n",
      "['runout_cnt', 'sales_est_amt_201812', 'const']\n",
      "['runout_cnt', 'sales_est_amt_201903', 'const']\n",
      "['runout_cnt', 'sales_est_amt_201906', 'const']\n",
      "['runout_cnt', 'sales_est_amt_201909', 'const']\n",
      "['runout_cnt', 'sales_est_amt_201912', 'const']\n",
      "['runout_cnt', 'sales_est_amt_202003', 'const']\n",
      "['runout_cnt', 'sales_est_amt_202006', 'const']\n",
      "['runout_cnt', 'sales_est_amt_202009', 'const']\n",
      "['runout_cnt', 'smbiz_yn_cnt', 'const']\n",
      "['runout_cnt', 'sme_loan_cnt', 'const']\n",
      "['runout_cnt', 'sme_loan_y_1', 'const']\n",
      "['runout_cnt', 'sme_loan_y_2', 'const']\n",
      "['runout_cnt', 'sme_loan_y_3', 'const']\n",
      "['runout_cnt', 'sme_loan_y_4', 'const']\n",
      "['runout_cnt', 'sme_loan_y_5', 'const']\n",
      "['runout_cnt', 'sme_loan_y_6', 'const']\n",
      "['runout_cnt', 'ws_cnt', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_201706', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_201709', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_201712', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_201803', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_201806', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_201809', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_201812', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_201903', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_201906', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_201909', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_201912', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_202003', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_201703', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_201703', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_201703', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_201703', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_201703', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_201703', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_201703', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_201703', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_201703', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_201703', 'ws_cnt', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_201709', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_201712', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_201803', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_201806', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_201809', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_201812', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_201903', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_201906', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_201909', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_201912', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_202003', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_201706', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_201706', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_201706', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_201706', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_201706', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_201706', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_201706', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_201706', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_201706', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_201706', 'ws_cnt', 'const']\n",
      "['sales_est_amt_201709', 'sales_est_amt_201712', 'const']\n",
      "['sales_est_amt_201709', 'sales_est_amt_201803', 'const']\n",
      "['sales_est_amt_201709', 'sales_est_amt_201806', 'const']\n",
      "['sales_est_amt_201709', 'sales_est_amt_201809', 'const']\n",
      "['sales_est_amt_201709', 'sales_est_amt_201812', 'const']\n",
      "['sales_est_amt_201709', 'sales_est_amt_201903', 'const']\n",
      "['sales_est_amt_201709', 'sales_est_amt_201906', 'const']\n",
      "['sales_est_amt_201709', 'sales_est_amt_201909', 'const']\n",
      "['sales_est_amt_201709', 'sales_est_amt_201912', 'const']\n",
      "['sales_est_amt_201709', 'sales_est_amt_202003', 'const']\n",
      "['sales_est_amt_201709', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_201709', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_201709', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_201709', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_201709', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_201709', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_201709', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_201709', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_201709', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_201709', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_201709', 'ws_cnt', 'const']\n",
      "['sales_est_amt_201712', 'sales_est_amt_201803', 'const']\n",
      "['sales_est_amt_201712', 'sales_est_amt_201806', 'const']\n",
      "['sales_est_amt_201712', 'sales_est_amt_201809', 'const']\n",
      "['sales_est_amt_201712', 'sales_est_amt_201812', 'const']\n",
      "['sales_est_amt_201712', 'sales_est_amt_201903', 'const']\n",
      "['sales_est_amt_201712', 'sales_est_amt_201906', 'const']\n",
      "['sales_est_amt_201712', 'sales_est_amt_201909', 'const']\n",
      "['sales_est_amt_201712', 'sales_est_amt_201912', 'const']\n",
      "['sales_est_amt_201712', 'sales_est_amt_202003', 'const']\n",
      "['sales_est_amt_201712', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_201712', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_201712', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_201712', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_201712', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_201712', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_201712', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_201712', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_201712', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_201712', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_201712', 'ws_cnt', 'const']\n",
      "['sales_est_amt_201803', 'sales_est_amt_201806', 'const']\n",
      "['sales_est_amt_201803', 'sales_est_amt_201809', 'const']\n",
      "['sales_est_amt_201803', 'sales_est_amt_201812', 'const']\n",
      "['sales_est_amt_201803', 'sales_est_amt_201903', 'const']\n",
      "['sales_est_amt_201803', 'sales_est_amt_201906', 'const']\n",
      "['sales_est_amt_201803', 'sales_est_amt_201909', 'const']\n",
      "['sales_est_amt_201803', 'sales_est_amt_201912', 'const']\n",
      "['sales_est_amt_201803', 'sales_est_amt_202003', 'const']\n",
      "['sales_est_amt_201803', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_201803', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_201803', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_201803', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_201803', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_201803', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_201803', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_201803', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_201803', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_201803', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_201803', 'ws_cnt', 'const']\n",
      "['sales_est_amt_201806', 'sales_est_amt_201809', 'const']\n",
      "['sales_est_amt_201806', 'sales_est_amt_201812', 'const']\n",
      "['sales_est_amt_201806', 'sales_est_amt_201903', 'const']\n",
      "['sales_est_amt_201806', 'sales_est_amt_201906', 'const']\n",
      "['sales_est_amt_201806', 'sales_est_amt_201909', 'const']\n",
      "['sales_est_amt_201806', 'sales_est_amt_201912', 'const']\n",
      "['sales_est_amt_201806', 'sales_est_amt_202003', 'const']\n",
      "['sales_est_amt_201806', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_201806', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_201806', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_201806', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_201806', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_201806', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_201806', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_201806', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_201806', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_201806', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_201806', 'ws_cnt', 'const']\n",
      "['sales_est_amt_201809', 'sales_est_amt_201812', 'const']\n",
      "['sales_est_amt_201809', 'sales_est_amt_201903', 'const']\n",
      "['sales_est_amt_201809', 'sales_est_amt_201906', 'const']\n",
      "['sales_est_amt_201809', 'sales_est_amt_201909', 'const']\n",
      "['sales_est_amt_201809', 'sales_est_amt_201912', 'const']\n",
      "['sales_est_amt_201809', 'sales_est_amt_202003', 'const']\n",
      "['sales_est_amt_201809', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_201809', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_201809', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_201809', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_201809', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_201809', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_201809', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_201809', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_201809', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_201809', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_201809', 'ws_cnt', 'const']\n",
      "['sales_est_amt_201812', 'sales_est_amt_201903', 'const']\n",
      "['sales_est_amt_201812', 'sales_est_amt_201906', 'const']\n",
      "['sales_est_amt_201812', 'sales_est_amt_201909', 'const']\n",
      "['sales_est_amt_201812', 'sales_est_amt_201912', 'const']\n",
      "['sales_est_amt_201812', 'sales_est_amt_202003', 'const']\n",
      "['sales_est_amt_201812', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_201812', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_201812', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_201812', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_201812', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_201812', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_201812', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_201812', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_201812', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_201812', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_201812', 'ws_cnt', 'const']\n",
      "['sales_est_amt_201903', 'sales_est_amt_201906', 'const']\n",
      "['sales_est_amt_201903', 'sales_est_amt_201909', 'const']\n",
      "['sales_est_amt_201903', 'sales_est_amt_201912', 'const']\n",
      "['sales_est_amt_201903', 'sales_est_amt_202003', 'const']\n",
      "['sales_est_amt_201903', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_201903', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_201903', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_201903', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_201903', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_201903', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_201903', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_201903', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_201903', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_201903', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_201903', 'ws_cnt', 'const']\n",
      "['sales_est_amt_201906', 'sales_est_amt_201909', 'const']\n",
      "['sales_est_amt_201906', 'sales_est_amt_201912', 'const']\n",
      "['sales_est_amt_201906', 'sales_est_amt_202003', 'const']\n",
      "['sales_est_amt_201906', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_201906', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_201906', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_201906', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_201906', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_201906', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_201906', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_201906', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_201906', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_201906', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_201906', 'ws_cnt', 'const']\n",
      "['sales_est_amt_201909', 'sales_est_amt_201912', 'const']\n",
      "['sales_est_amt_201909', 'sales_est_amt_202003', 'const']\n",
      "['sales_est_amt_201909', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_201909', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_201909', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_201909', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_201909', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_201909', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_201909', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_201909', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_201909', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_201909', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_201909', 'ws_cnt', 'const']\n",
      "['sales_est_amt_201912', 'sales_est_amt_202003', 'const']\n",
      "['sales_est_amt_201912', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_201912', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_201912', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_201912', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_201912', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_201912', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_201912', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_201912', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_201912', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_201912', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_201912', 'ws_cnt', 'const']\n",
      "['sales_est_amt_202003', 'sales_est_amt_202006', 'const']\n",
      "['sales_est_amt_202003', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_202003', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_202003', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_202003', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_202003', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_202003', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_202003', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_202003', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_202003', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_202003', 'ws_cnt', 'const']\n",
      "['sales_est_amt_202006', 'sales_est_amt_202009', 'const']\n",
      "['sales_est_amt_202006', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_202006', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_202006', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_202006', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_202006', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_202006', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_202006', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_202006', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_202006', 'ws_cnt', 'const']\n",
      "['sales_est_amt_202009', 'smbiz_yn_cnt', 'const']\n",
      "['sales_est_amt_202009', 'sme_loan_cnt', 'const']\n",
      "['sales_est_amt_202009', 'sme_loan_y_1', 'const']\n",
      "['sales_est_amt_202009', 'sme_loan_y_2', 'const']\n",
      "['sales_est_amt_202009', 'sme_loan_y_3', 'const']\n",
      "['sales_est_amt_202009', 'sme_loan_y_4', 'const']\n",
      "['sales_est_amt_202009', 'sme_loan_y_5', 'const']\n",
      "['sales_est_amt_202009', 'sme_loan_y_6', 'const']\n",
      "['sales_est_amt_202009', 'ws_cnt', 'const']\n",
      "['smbiz_yn_cnt', 'sme_loan_cnt', 'const']\n",
      "['smbiz_yn_cnt', 'sme_loan_y_1', 'const']\n",
      "['smbiz_yn_cnt', 'sme_loan_y_2', 'const']\n",
      "['smbiz_yn_cnt', 'sme_loan_y_3', 'const']\n",
      "['smbiz_yn_cnt', 'sme_loan_y_4', 'const']\n",
      "['smbiz_yn_cnt', 'sme_loan_y_5', 'const']\n",
      "['smbiz_yn_cnt', 'sme_loan_y_6', 'const']\n",
      "['smbiz_yn_cnt', 'ws_cnt', 'const']\n",
      "['sme_loan_cnt', 'sme_loan_y_1', 'const']\n",
      "['sme_loan_cnt', 'sme_loan_y_2', 'const']\n",
      "['sme_loan_cnt', 'sme_loan_y_3', 'const']\n",
      "['sme_loan_cnt', 'sme_loan_y_4', 'const']\n",
      "['sme_loan_cnt', 'sme_loan_y_5', 'const']\n",
      "['sme_loan_cnt', 'sme_loan_y_6', 'const']\n",
      "['sme_loan_cnt', 'ws_cnt', 'const']\n",
      "['sme_loan_y_1', 'sme_loan_y_2', 'const']\n",
      "['sme_loan_y_1', 'sme_loan_y_3', 'const']\n",
      "['sme_loan_y_1', 'sme_loan_y_4', 'const']\n",
      "['sme_loan_y_1', 'sme_loan_y_5', 'const']\n",
      "['sme_loan_y_1', 'sme_loan_y_6', 'const']\n",
      "['sme_loan_y_1', 'ws_cnt', 'const']\n",
      "['sme_loan_y_2', 'sme_loan_y_3', 'const']\n",
      "['sme_loan_y_2', 'sme_loan_y_4', 'const']\n",
      "['sme_loan_y_2', 'sme_loan_y_5', 'const']\n",
      "['sme_loan_y_2', 'sme_loan_y_6', 'const']\n",
      "['sme_loan_y_2', 'ws_cnt', 'const']\n",
      "['sme_loan_y_3', 'sme_loan_y_4', 'const']\n",
      "['sme_loan_y_3', 'sme_loan_y_5', 'const']\n",
      "['sme_loan_y_3', 'sme_loan_y_6', 'const']\n",
      "['sme_loan_y_3', 'ws_cnt', 'const']\n",
      "['sme_loan_y_4', 'sme_loan_y_5', 'const']\n",
      "['sme_loan_y_4', 'sme_loan_y_6', 'const']\n",
      "['sme_loan_y_4', 'ws_cnt', 'const']\n",
      "['sme_loan_y_5', 'sme_loan_y_6', 'const']\n",
      "['sme_loan_y_5', 'ws_cnt', 'const']\n",
      "['sme_loan_y_6', 'ws_cnt', 'const']\n"
     ]
    }
   ],
   "source": [
    "for combo in itertools.combinations(X.columns.difference(['const']),2):\n",
    "    print((list(combo)+['const']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "outdoor-major",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "processed 64 models on 1 predictors in 0.0959465503692627 seconds.\n",
      "processed 2016 models on 2 predictors in 3.0622482299804688 seconds.\n",
      "processed 41664 models on 3 predictors in 68.44302821159363 seconds.\n",
      "Total elapsed time: 72.06895971298218 seconds.\n"
     ]
    }
   ],
   "source": [
    "models = pd.DataFrame(columns=[\"AIC\", \"model\"])\n",
    "tic = time.time()\n",
    "for i in range(1,4):\n",
    "    models.loc[i] = getBest(X=train_x,y=train_y,k=i)\n",
    "toc = time.time()\n",
    "print(\"Total elapsed time:\", (toc-tic), \"seconds.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "governing-suspension",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AIC</th>\n",
       "      <th>model</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-1972.539584</td>\n",
       "      <td>&lt;statsmodels.regression.linear_model.Regressio...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-2445.912188</td>\n",
       "      <td>&lt;statsmodels.regression.linear_model.Regressio...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-2613.633305</td>\n",
       "      <td>&lt;statsmodels.regression.linear_model.Regressio...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           AIC                                              model\n",
       "1 -1972.539584  <statsmodels.regression.linear_model.Regressio...\n",
       "2 -2445.912188  <statsmodels.regression.linear_model.Regressio...\n",
       "3 -2613.633305  <statsmodels.regression.linear_model.Regressio..."
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "modified-asian",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>found_age_6</td>   <th>  R-squared:         </th> <td>   0.685</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.685</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   1144.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 26 Jan 2021</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>16:37:19</td>     <th>  Log-Likelihood:    </th> <td>  1310.8</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  1579</td>      <th>  AIC:               </th> <td>  -2614.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  1575</td>      <th>  BIC:               </th> <td>  -2592.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     3</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_g_yn</th> <td>    0.0795</td> <td>    0.006</td> <td>   13.369</td> <td> 0.000</td> <td>    0.068</td> <td>    0.091</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_s_yn</th> <td>    0.1356</td> <td>    0.006</td> <td>   22.464</td> <td> 0.000</td> <td>    0.124</td> <td>    0.147</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ws_cnt</th>     <td>    1.2954</td> <td>    0.037</td> <td>   35.148</td> <td> 0.000</td> <td>    1.223</td> <td>    1.368</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>      <td>    0.0688</td> <td>    0.005</td> <td>   13.967</td> <td> 0.000</td> <td>    0.059</td> <td>    0.078</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>63.787</td> <th>  Durbin-Watson:     </th> <td>   1.949</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td>  75.925</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.449</td> <th>  Prob(JB):          </th> <td>3.26e-17</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 3.591</td> <th>  Cond. No.          </th> <td>    18.3</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:            found_age_6   R-squared:                       0.685\n",
       "Model:                            OLS   Adj. R-squared:                  0.685\n",
       "Method:                 Least Squares   F-statistic:                     1144.\n",
       "Date:                Tue, 26 Jan 2021   Prob (F-statistic):               0.00\n",
       "Time:                        16:37:19   Log-Likelihood:                 1310.8\n",
       "No. Observations:                1579   AIC:                            -2614.\n",
       "Df Residuals:                    1575   BIC:                            -2592.\n",
       "Df Model:                           3                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "indcd_g_yn     0.0795      0.006     13.369      0.000       0.068       0.091\n",
       "indcd_s_yn     0.1356      0.006     22.464      0.000       0.124       0.147\n",
       "ws_cnt         1.2954      0.037     35.148      0.000       1.223       1.368\n",
       "const          0.0688      0.005     13.967      0.000       0.059       0.078\n",
       "==============================================================================\n",
       "Omnibus:                       63.787   Durbin-Watson:                   1.949\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):               75.925\n",
       "Skew:                          -0.449   Prob(JB):                     3.26e-17\n",
       "Kurtosis:                       3.591   Cond. No.                         18.3\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "models.loc[3,\"model\"].summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "transsexual-divide",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>found_age_6</td>   <th>  R-squared:         </th> <td>   0.650</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.649</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   1462.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 26 Jan 2021</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>16:37:59</td>     <th>  Log-Likelihood:    </th> <td>  1226.0</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  1579</td>      <th>  AIC:               </th> <td>  -2446.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  1576</td>      <th>  BIC:               </th> <td>  -2430.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_s_yn</th> <td>    0.1481</td> <td>    0.006</td> <td>   23.529</td> <td> 0.000</td> <td>    0.136</td> <td>    0.160</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ws_cnt</th>     <td>    1.3674</td> <td>    0.038</td> <td>   35.553</td> <td> 0.000</td> <td>    1.292</td> <td>    1.443</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>      <td>    0.1167</td> <td>    0.004</td> <td>   32.840</td> <td> 0.000</td> <td>    0.110</td> <td>    0.124</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>61.942</td> <th>  Durbin-Watson:     </th> <td>   1.995</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td>  74.010</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.438</td> <th>  Prob(JB):          </th> <td>8.49e-17</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 3.598</td> <th>  Cond. No.          </th> <td>    14.9</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:            found_age_6   R-squared:                       0.650\n",
       "Model:                            OLS   Adj. R-squared:                  0.649\n",
       "Method:                 Least Squares   F-statistic:                     1462.\n",
       "Date:                Tue, 26 Jan 2021   Prob (F-statistic):               0.00\n",
       "Time:                        16:37:59   Log-Likelihood:                 1226.0\n",
       "No. Observations:                1579   AIC:                            -2446.\n",
       "Df Residuals:                    1576   BIC:                            -2430.\n",
       "Df Model:                           2                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "indcd_s_yn     0.1481      0.006     23.529      0.000       0.136       0.160\n",
       "ws_cnt         1.3674      0.038     35.553      0.000       1.292       1.443\n",
       "const          0.1167      0.004     32.840      0.000       0.110       0.124\n",
       "==============================================================================\n",
       "Omnibus:                       61.942   Durbin-Watson:                   1.995\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):               74.010\n",
       "Skew:                          -0.438   Prob(JB):                     8.49e-17\n",
       "Kurtosis:                       3.598   Cond. No.                         14.9\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "models.loc[2,\"model\"].summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "boolean-constitutional",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>found_age_6</td>   <th>  R-squared:         </th> <td>   0.527</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.526</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   1755.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Tue, 26 Jan 2021</td> <th>  Prob (F-statistic):</th> <td>2.01e-258</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>16:38:41</td>     <th>  Log-Likelihood:    </th> <td>  988.27</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  1579</td>      <th>  AIC:               </th> <td>  -1973.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  1577</td>      <th>  BIC:               </th> <td>  -1962.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "     <td></td>       <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>ws_cnt</th> <td>    1.7223</td> <td>    0.041</td> <td>   41.890</td> <td> 0.000</td> <td>    1.642</td> <td>    1.803</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>  <td>    0.1623</td> <td>    0.003</td> <td>   46.855</td> <td> 0.000</td> <td>    0.155</td> <td>    0.169</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>60.342</td> <th>  Durbin-Watson:     </th> <td>   2.023</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td> 100.955</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.315</td> <th>  Prob(JB):          </th> <td>1.20e-22</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 4.066</td> <th>  Cond. No.          </th> <td>    12.6</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:            found_age_6   R-squared:                       0.527\n",
       "Model:                            OLS   Adj. R-squared:                  0.526\n",
       "Method:                 Least Squares   F-statistic:                     1755.\n",
       "Date:                Tue, 26 Jan 2021   Prob (F-statistic):          2.01e-258\n",
       "Time:                        16:38:41   Log-Likelihood:                 988.27\n",
       "No. Observations:                1579   AIC:                            -1973.\n",
       "Df Residuals:                    1577   BIC:                            -1962.\n",
       "Df Model:                           1                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "ws_cnt         1.7223      0.041     41.890      0.000       1.642       1.803\n",
       "const          0.1623      0.003     46.855      0.000       0.155       0.169\n",
       "==============================================================================\n",
       "Omnibus:                       60.342   Durbin-Watson:                   2.023\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              100.955\n",
       "Skew:                          -0.315   Prob(JB):                     1.20e-22\n",
       "Kurtosis:                       4.066   Cond. No.                         12.6\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "models.loc[1,\"model\"].summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "roman-destruction",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "full model Rsquared:  0.84728\n",
      "full model AIC:  -3646.70417\n",
      "full model MSE:  0.03540\n",
      "selected model Rsquared:  0.68542\n",
      "selected model AIC:  -2613.63330\n",
      "selected model MSE:  0.03540\n"
     ]
    }
   ],
   "source": [
    "print(\"full model Rsquared: \",\"{:.5f}\".format(fitted_full_model.rsquared))\n",
    "print(\"full model AIC: \",\"{:.5f}\".format(fitted_full_model.aic))\n",
    "print(\"full model MSE: \",\"{:.5F}\".format(fitted_full_model.mse_total))\n",
    "print(\"selected model Rsquared: \",\"{:.5f}\".format(models.loc[3, \"model\"].rsquared))\n",
    "print(\"selected model AIC: \",\"{:.5F}\".format(models.loc[3, \"model\"].aic))\n",
    "print(\"selected model MSE: \",\"{:.5f}\".format(models.loc[3, \"model\"].mse_total))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "plastic-newman",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
