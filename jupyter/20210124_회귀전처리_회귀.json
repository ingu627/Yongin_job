{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "import geopandas as gpd\n",
    "import numpy as np\n",
    "import matplotlib as mpl\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import accuracy_score, roc_auc_score, roc_curve\n",
    "import statsmodels.api as sm\n",
    "import matplotlib.pyplot as plt\n",
    "import time "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1 = pd.read_csv(\"17.용인시_소상공인_매출정보.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df1[[\"indcd_a_yn\",\"indcd_b_yn\",\"indcd_c_yn\",\"indcd_d_yn\",\"indcd_e_yn\",\"indcd_f_yn\",\"indcd_g_yn\",\"indcd_h_yn\",\"indcd_i_yn\",\"indcd_j_yn\",\"indcd_k_yn\",\"indcd_l_yn\",\"indcd_m_yn\",\"indcd_n_yn\",\"indcd_o_yn\",\"indcd_p_yn\",\"indcd_q_yn\",\"indcd_r_yn\",\"indcd_s_yn\",\"indcd_t_yn\",\"indcd_u_yn\"]] = df1[[\"indcd_a_yn\",\"indcd_b_yn\",\"indcd_c_yn\",\"indcd_d_yn\",\"indcd_e_yn\",\"indcd_f_yn\",\"indcd_g_yn\",\"indcd_h_yn\",\"indcd_i_yn\",\"indcd_j_yn\",\"indcd_k_yn\",\"indcd_l_yn\",\"indcd_m_yn\",\"indcd_n_yn\",\"indcd_o_yn\",\"indcd_p_yn\",\"indcd_q_yn\",\"indcd_r_yn\",\"indcd_s_yn\",\"indcd_t_yn\",\"indcd_u_yn\"]].replace('Y', 1)\n",
    "df1[[\"indcd_a_yn\",\"indcd_b_yn\",\"indcd_c_yn\",\"indcd_d_yn\",\"indcd_e_yn\",\"indcd_f_yn\",\"indcd_g_yn\",\"indcd_h_yn\",\"indcd_i_yn\",\"indcd_j_yn\",\"indcd_k_yn\",\"indcd_l_yn\",\"indcd_m_yn\",\"indcd_n_yn\",\"indcd_o_yn\",\"indcd_p_yn\",\"indcd_q_yn\",\"indcd_r_yn\",\"indcd_s_yn\",\"indcd_t_yn\",\"indcd_u_yn\"]] = df1[[\"indcd_a_yn\",\"indcd_b_yn\",\"indcd_c_yn\",\"indcd_d_yn\",\"indcd_e_yn\",\"indcd_f_yn\",\"indcd_g_yn\",\"indcd_h_yn\",\"indcd_i_yn\",\"indcd_j_yn\",\"indcd_k_yn\",\"indcd_l_yn\",\"indcd_m_yn\",\"indcd_n_yn\",\"indcd_o_yn\",\"indcd_p_yn\",\"indcd_q_yn\",\"indcd_r_yn\",\"indcd_s_yn\",\"indcd_t_yn\",\"indcd_u_yn\"]].replace(np.nan, 0)\n",
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "import statsmodels.api as sm\n",
    "import statsmodels.formula.api as smf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#colum을 리스트로 만들고 원하는거 추출\n",
    "df1_list =list(df1)\n",
    "df1_list = df1_list[45:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "#필요없는 COLUMN 삭제방법\n",
    "#df1_list.remove('gid')\n",
    "#df1_list.remove('runout_cnt')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "#FORMULA 형식으로 바꾸는 것\n",
    "df1_1='+'.join(df1_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/app-root/lib/python3.6/site-packages/statsmodels/regression/linear_model.py:1860: RuntimeWarning: divide by zero encountered in double_scalars\n",
      "  return np.sqrt(eigvals[0]/eigvals[-1])\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>       <td>runout_cnt</td>    <th>  R-squared:         </th> <td>   0.393</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.388</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   85.16</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Mon, 25 Jan 2021</td> <th>  Prob (F-statistic):</th> <td>1.70e-227</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>13:29:48</td>     <th>  Log-Likelihood:    </th> <td> -3150.7</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  2257</td>      <th>  AIC:               </th> <td>   6337.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  2239</td>      <th>  BIC:               </th> <td>   6440.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>    17</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>  <td>   -0.2261</td> <td>    0.046</td> <td>   -4.923</td> <td> 0.000</td> <td>   -0.316</td> <td>   -0.136</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_a_yn</th> <td>   -0.1145</td> <td>    0.255</td> <td>   -0.449</td> <td> 0.654</td> <td>   -0.615</td> <td>    0.386</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_b_yn</th> <td> 1.553e-16</td> <td> 2.75e-16</td> <td>    0.565</td> <td> 0.572</td> <td>-3.83e-16</td> <td> 6.94e-16</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_c_yn</th> <td>    0.2616</td> <td>    0.054</td> <td>    4.838</td> <td> 0.000</td> <td>    0.156</td> <td>    0.368</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_d_yn</th> <td>    0.2261</td> <td>    0.982</td> <td>    0.230</td> <td> 0.818</td> <td>   -1.700</td> <td>    2.152</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_e_yn</th> <td>-1.136e-15</td> <td> 3.19e-16</td> <td>   -3.565</td> <td> 0.000</td> <td>-1.76e-15</td> <td>-5.11e-16</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_f_yn</th> <td>    0.1312</td> <td>    0.120</td> <td>    1.091</td> <td> 0.275</td> <td>   -0.105</td> <td>    0.367</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_g_yn</th> <td>    0.0932</td> <td>    0.047</td> <td>    1.988</td> <td> 0.047</td> <td>    0.001</td> <td>    0.185</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_h_yn</th> <td>    0.2049</td> <td>    0.099</td> <td>    2.068</td> <td> 0.039</td> <td>    0.011</td> <td>    0.399</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_i_yn</th> <td>    0.1348</td> <td>    0.045</td> <td>    3.001</td> <td> 0.003</td> <td>    0.047</td> <td>    0.223</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_j_yn</th> <td>    0.9871</td> <td>    0.106</td> <td>    9.274</td> <td> 0.000</td> <td>    0.778</td> <td>    1.196</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_k_yn</th> <td>    0.2194</td> <td>    0.313</td> <td>    0.701</td> <td> 0.483</td> <td>   -0.394</td> <td>    0.833</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_l_yn</th> <td>    0.7297</td> <td>    0.138</td> <td>    5.293</td> <td> 0.000</td> <td>    0.459</td> <td>    1.000</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_m_yn</th> <td>    0.7041</td> <td>    0.079</td> <td>    8.969</td> <td> 0.000</td> <td>    0.550</td> <td>    0.858</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_n_yn</th> <td>    0.4998</td> <td>    0.072</td> <td>    6.920</td> <td> 0.000</td> <td>    0.358</td> <td>    0.641</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_o_yn</th> <td>-5.187e-17</td> <td>  1.7e-15</td> <td>   -0.031</td> <td> 0.976</td> <td>-3.38e-15</td> <td> 3.28e-15</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_p_yn</th> <td>    0.1635</td> <td>    0.059</td> <td>    2.789</td> <td> 0.005</td> <td>    0.049</td> <td>    0.278</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_q_yn</th> <td>    0.4169</td> <td>    0.077</td> <td>    5.446</td> <td> 0.000</td> <td>    0.267</td> <td>    0.567</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_r_yn</th> <td>    0.4059</td> <td>    0.067</td> <td>    6.083</td> <td> 0.000</td> <td>    0.275</td> <td>    0.537</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_s_yn</th> <td>    0.0516</td> <td>    0.051</td> <td>    1.013</td> <td> 0.311</td> <td>   -0.048</td> <td>    0.152</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_t_yn</th> <td>    2.0723</td> <td>    0.494</td> <td>    4.197</td> <td> 0.000</td> <td>    1.104</td> <td>    3.041</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>indcd_u_yn</th> <td>         0</td> <td>        0</td> <td>      nan</td> <td>   nan</td> <td>        0</td> <td>        0</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>2258.626</td> <th>  Durbin-Watson:     </th>  <td>   1.794</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th>  <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>209543.968</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>           <td> 4.619</td>  <th>  Prob(JB):          </th>  <td>    0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>       <td>49.291</td>  <th>  Cond. No.          </th>  <td>     inf</td> \n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The smallest eigenvalue is      0. This might indicate that there are<br/>strong multicollinearity problems or that the design matrix is singular."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:             runout_cnt   R-squared:                       0.393\n",
       "Model:                            OLS   Adj. R-squared:                  0.388\n",
       "Method:                 Least Squares   F-statistic:                     85.16\n",
       "Date:                Mon, 25 Jan 2021   Prob (F-statistic):          1.70e-227\n",
       "Time:                        13:29:48   Log-Likelihood:                -3150.7\n",
       "No. Observations:                2257   AIC:                             6337.\n",
       "Df Residuals:                    2239   BIC:                             6440.\n",
       "Df Model:                          17                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "Intercept     -0.2261      0.046     -4.923      0.000      -0.316      -0.136\n",
       "indcd_a_yn    -0.1145      0.255     -0.449      0.654      -0.615       0.386\n",
       "indcd_b_yn  1.553e-16   2.75e-16      0.565      0.572   -3.83e-16    6.94e-16\n",
       "indcd_c_yn     0.2616      0.054      4.838      0.000       0.156       0.368\n",
       "indcd_d_yn     0.2261      0.982      0.230      0.818      -1.700       2.152\n",
       "indcd_e_yn -1.136e-15   3.19e-16     -3.565      0.000   -1.76e-15   -5.11e-16\n",
       "indcd_f_yn     0.1312      0.120      1.091      0.275      -0.105       0.367\n",
       "indcd_g_yn     0.0932      0.047      1.988      0.047       0.001       0.185\n",
       "indcd_h_yn     0.2049      0.099      2.068      0.039       0.011       0.399\n",
       "indcd_i_yn     0.1348      0.045      3.001      0.003       0.047       0.223\n",
       "indcd_j_yn     0.9871      0.106      9.274      0.000       0.778       1.196\n",
       "indcd_k_yn     0.2194      0.313      0.701      0.483      -0.394       0.833\n",
       "indcd_l_yn     0.7297      0.138      5.293      0.000       0.459       1.000\n",
       "indcd_m_yn     0.7041      0.079      8.969      0.000       0.550       0.858\n",
       "indcd_n_yn     0.4998      0.072      6.920      0.000       0.358       0.641\n",
       "indcd_o_yn -5.187e-17    1.7e-15     -0.031      0.976   -3.38e-15    3.28e-15\n",
       "indcd_p_yn     0.1635      0.059      2.789      0.005       0.049       0.278\n",
       "indcd_q_yn     0.4169      0.077      5.446      0.000       0.267       0.567\n",
       "indcd_r_yn     0.4059      0.067      6.083      0.000       0.275       0.537\n",
       "indcd_s_yn     0.0516      0.051      1.013      0.311      -0.048       0.152\n",
       "indcd_t_yn     2.0723      0.494      4.197      0.000       1.104       3.041\n",
       "indcd_u_yn          0          0        nan        nan           0           0\n",
       "==============================================================================\n",
       "Omnibus:                     2258.626   Durbin-Watson:                   1.794\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):           209543.968\n",
       "Skew:                           4.619   Prob(JB):                         0.00\n",
       "Kurtosis:                      49.291   Cond. No.                          inf\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The smallest eigenvalue is      0. This might indicate that there are\n",
       "strong multicollinearity problems or that the design matrix is singular.\n",
       "\"\"\""
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#회귀분석 \n",
    "# 1) p값을 기준으로 제거\n",
    "# 2) 상관분석 결과로 제거\n",
    "\n",
    "####로지스틱 회귀분석으로 변경해야함\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "model = smf.ols(formula = 'runout_cnt ~ '+df1_1,data= df1)\n",
    "result = model.fit()\n",
    "result.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "The least populated class in y has only 1 member, which is too few. The minimum number of groups for any class cannot be less than 2.",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-36-4bf37e011bf1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mtrain_X\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_X\u001b[0m \u001b[0;34m,\u001b[0m\u001b[0mtrain_y\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_y\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_test_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstratify\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mtrain_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.7\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mtest_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_X\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_X\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrain_y\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_y\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/app-root/lib/python3.6/site-packages/sklearn/model_selection/_split.py\u001b[0m in \u001b[0;36mtrain_test_split\u001b[0;34m(test_size, train_size, random_state, shuffle, stratify, *arrays)\u001b[0m\n\u001b[1;32m   2195\u001b[0m                      random_state=random_state)\n\u001b[1;32m   2196\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2197\u001b[0;31m         \u001b[0mtrain\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0marrays\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstratify\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2198\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2199\u001b[0m     return list(chain.from_iterable((_safe_indexing(a, train),\n",
      "\u001b[0;32m/opt/app-root/lib/python3.6/site-packages/sklearn/model_selection/_split.py\u001b[0m in \u001b[0;36msplit\u001b[0;34m(self, X, y, groups)\u001b[0m\n\u001b[1;32m   1385\u001b[0m         \"\"\"\n\u001b[1;32m   1386\u001b[0m         \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgroups\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgroups\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1387\u001b[0;31m         \u001b[0;32mfor\u001b[0m \u001b[0mtrain\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_iter_indices\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgroups\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1388\u001b[0m             \u001b[0;32myield\u001b[0m \u001b[0mtrain\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1389\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/opt/app-root/lib/python3.6/site-packages/sklearn/model_selection/_split.py\u001b[0m in \u001b[0;36m_iter_indices\u001b[0;34m(self, X, y, groups)\u001b[0m\n\u001b[1;32m   1713\u001b[0m         \u001b[0mclass_counts\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbincount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_indices\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1714\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mclass_counts\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1715\u001b[0;31m             raise ValueError(\"The least populated class in y has only 1\"\n\u001b[0m\u001b[1;32m   1716\u001b[0m                              \u001b[0;34m\" member, which is too few. The minimum\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1717\u001b[0m                              \u001b[0;34m\" number of groups for any class cannot\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: The least populated class in y has only 1 member, which is too few. The minimum number of groups for any class cannot be less than 2."
     ]
    }
   ],
   "source": [
    "\n",
    "X = df1[['indcd_a_yn','indcd_b_yn','indcd_c_yn','indcd_d_yn','indcd_e_yn','indcd_f_yn',\n",
    "               'indcd_g_yn','indcd_h_yn','indcd_i_yn','indcd_k_yn','indcd_l_yn','indcd_m_yn','indcd_n_yn',\n",
    "               'indcd_o_yn','indcd_p_yn','indcd_q_yn','indcd_r_yn','indcd_s_yn','indcd_t_yn','indcd_u_yn']]\n",
    "\n",
    "y = df1[['ws_cnt']]\n",
    "\n",
    "#train_features, test_features, train_labels, test_labels = train_test_split(features, labels)\n",
    "\n",
    "\n",
    "train_X, test_X ,train_y, test_y = train_test_split(X, y, stratify=y,train_size=0.7,test_size=0.3,random_state=1)\n",
    "\n",
    "\n",
    "print(train_X.shape, test_X.shape, train_y.shape, test_y.shape)\n",
    "\n",
    "#model = LogisticRegression()\n",
    "#model.fit(train_features, train_labels)\n",
    "\n",
    "#print(model.score(train_features, train_labels))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-29-30768f7166d6>, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-29-30768f7166d6>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    print result.summary()\u001b[0m\n\u001b[0m               ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "result = model.fit(train_features, train_labels)\n",
    "print result.summary()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
